

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Sat Oct 10 04:44:10 2015

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F25K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBIGRAM,global,class=CODE,delta=1
     7                           	psect	idataBANK0,global,class=CODE,delta=1
     8                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1
    14                           	psect	dataBIGRAM,global,class=BIGRAM,space=1,delta=1
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    28                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    29                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    30  0000                     
    31                           	psect	idataCOMRAM
    32  000FF6                     __pidataCOMRAM:
    33                           	opt stack 0
    34                           
    35                           ;initializer for _numlist
    36  000FF6  00                 	db	0
    37  000FF7  00                 	db	0
    38  000FF8  0A                 	db	10
    39  000FF9  00                 	db	0
    40  000FFA  00                 	db	0
    41                           
    42                           ;initializer for _time_count
    43  000FFB  0078               	dw	120
    44                           
    45                           	psect	idataBIGRAM
    46  00060C                     __pidataBIGRAM:
    47                           	opt stack 0
    48                           
    49                           ;initializer for _ThankYou
    50  00060C  00                 	db	0
    51  00060D  0000               	dw	0
    52  00060F  00                 	db	0
    53  000610  0000               	dw	0
    54  000612  00                 	db	0
    55  000613  0000               	dw	0
    56  000615  00                 	db	0
    57  000616  0000               	dw	0
    58  000618  00                 	db	0
    59  000619  0000               	dw	0
    60  00061B  00                 	db	0
    61  00061C  0000               	dw	0
    62  00061E  00                 	db	0
    63  00061F  0000               	dw	0
    64  000621  00                 	db	0
    65  000622  0000               	dw	0
    66  000624  00                 	db	0
    67  000625  0000               	dw	0
    68  000627  00                 	db	0
    69  000628  0000               	dw	0
    70  00062A  00                 	db	0
    71  00062B  0000               	dw	0
    72  00062D  00                 	db	0
    73  00062E  0000               	dw	0
    74  000630  08                 	db	8
    75  000631  0000               	dw	0
    76  000633  08                 	db	8
    77  000634  0000               	dw	0
    78  000636  0F                 	db	15
    79  000637  E000               	dw	57344
    80  000639  08                 	db	8
    81  00063A  0000               	dw	0
    82  00063C  08                 	db	8
    83  00063D  0000               	dw	0
    84  00063F  00                 	db	0
    85  000640  0000               	dw	0
    86  000642  00                 	db	0
    87  000643  0000               	dw	0
    88  000645  00                 	db	0
    89  000646  0000               	dw	0
    90  000648  0F                 	db	15
    91  000649  E000               	dw	57344
    92  00064B  01                 	db	1
    93  00064C  0000               	dw	0
    94  00064E  02                 	db	2
    95  00064F  0000               	dw	0
    96  000651  02                 	db	2
    97  000652  0000               	dw	0
    98  000654  01                 	db	1
    99  000655  E000               	dw	57344
   100  000657  00                 	db	0
   101  000658  0000               	dw	0
   102  00065A  00                 	db	0
   103  00065B  0000               	dw	0
   104  00065D  00                 	db	0
   105  00065E  0000               	dw	0
   106  000660  00                 	db	0
   107  000661  4000               	dw	16384
   108  000663  02                 	db	2
   109  000664  A000               	dw	40960
   110  000666  02                 	db	2
   111  000667  A000               	dw	40960
   112  000669  02                 	db	2
   113  00066A  A000               	dw	40960
   114  00066C  01                 	db	1
   115  00066D  C000               	dw	49152
   116  00066F  00                 	db	0
   117  000670  2000               	dw	8192
   118  000672  00                 	db	0
   119  000673  0000               	dw	0
   120  000675  00                 	db	0
   121  000676  0000               	dw	0
   122  000678  03                 	db	3
   123  000679  E000               	dw	57344
   124  00067B  02                 	db	2
   125  00067C  0000               	dw	0
   126  00067E  02                 	db	2
   127  00067F  0000               	dw	0
   128  000681  02                 	db	2
   129  000682  0000               	dw	0
   130  000684  01                 	db	1
   131  000685  E000               	dw	57344
   132  000687  00                 	db	0
   133  000688  0000               	dw	0
   134  00068A  00                 	db	0
   135  00068B  0000               	dw	0
   136  00068D  00                 	db	0
   137  00068E  0000               	dw	0
   138  000690  00                 	db	0
   139  000691  0000               	dw	0
   140  000693  0F                 	db	15
   141  000694  E000               	dw	57344
   142  000696  00                 	db	0
   143  000697  8000               	dw	32768
   144  000699  01                 	db	1
   145  00069A  4000               	dw	16384
   146  00069C  02                 	db	2
   147  00069D  2000               	dw	8192
   148  00069F  00                 	db	0
   149  0006A0  0000               	dw	0
   150  0006A2  00                 	db	0
   151  0006A3  0000               	dw	0
   152  0006A5  00                 	db	0
   153  0006A6  0000               	dw	0
   154  0006A8  0C                 	db	12
   155  0006A9  0000               	dw	0
   156  0006AB  02                 	db	2
   157  0006AC  0000               	dw	0
   158  0006AE  01                 	db	1
   159  0006AF  E000               	dw	57344
   160  0006B1  02                 	db	2
   161  0006B2  0000               	dw	0
   162  0006B4  0C                 	db	12
   163  0006B5  0000               	dw	0
   164  0006B7  00                 	db	0
   165  0006B8  0000               	dw	0
   166  0006BA  00                 	db	0
   167  0006BB  0000               	dw	0
   168  0006BD  00                 	db	0
   169  0006BE  0000               	dw	0
   170  0006C0  01                 	db	1
   171  0006C1  C000               	dw	49152
   172  0006C3  02                 	db	2
   173  0006C4  2000               	dw	8192
   174  0006C6  02                 	db	2
   175  0006C7  2000               	dw	8192
   176  0006C9  02                 	db	2
   177  0006CA  2000               	dw	8192
   178  0006CC  01                 	db	1
   179  0006CD  C000               	dw	49152
   180  0006CF  00                 	db	0
   181  0006D0  0000               	dw	0
   182  0006D2  00                 	db	0
   183  0006D3  0000               	dw	0
   184  0006D5  00                 	db	0
   185  0006D6  0000               	dw	0
   186  0006D8  03                 	db	3
   187  0006D9  0000               	dw	0
   188  0006DB  00                 	db	0
   189  0006DC  C000               	dw	49152
   190  0006DE  00                 	db	0
   191  0006DF  2000               	dw	8192
   192  0006E1  00                 	db	0
   193  0006E2  C000               	dw	49152
   194  0006E4  03                 	db	3
   195  0006E5  0000               	dw	0
   196  0006E7  00                 	db	0
   197  0006E8  0000               	dw	0
   198  0006EA  00                 	db	0
   199  0006EB  0000               	dw	0
   200  0006ED  00                 	db	0
   201  0006EE  0000               	dw	0
   202  0006F0  00                 	db	0
   203  0006F1  0000               	dw	0
   204  0006F3  00                 	db	0
   205  0006F4  0000               	dw	0
   206  0006F6  0F                 	db	15
   207  0006F7  A000               	dw	40960
   208  0006F9  00                 	db	0
   209  0006FA  0000               	dw	0
   210  0006FC  00                 	db	0
   211  0006FD  0000               	dw	0
   212  0006FF  00                 	db	0
   213  000700  00                 	db	0
   214  000701  00                 	db	0
   215  000702  00                 	db	0
   216  000703  00                 	db	0
   217  000704  00                 	db	0
   218  000705  00                 	db	0
   219  000706  00                 	db	0
   220  000707  00                 	db	0
   221  000708  00                 	db	0
   222  000709  00                 	db	0
   223  00070A  00                 	db	0
   224  00070B  00                 	db	0
   225  00070C  00                 	db	0
   226  00070D  00                 	db	0
   227  00070E  00                 	db	0
   228  00070F  00                 	db	0
   229  000710  00                 	db	0
   230  000711  00                 	db	0
   231  000712  00                 	db	0
   232  000713  00                 	db	0
   233  000714  00                 	db	0
   234  000715  00                 	db	0
   235  000716  00                 	db	0
   236  000717  00                 	db	0
   237  000718  00                 	db	0
   238  000719  00                 	db	0
   239                           
   240                           ;initializer for _Youkoso
   241  00071A  00                 	db	0
   242  00071B  0000               	dw	0
   243  00071D  00                 	db	0
   244  00071E  0000               	dw	0
   245  000720  00                 	db	0
   246  000721  0000               	dw	0
   247  000723  00                 	db	0
   248  000724  0000               	dw	0
   249  000726  00                 	db	0
   250  000727  0000               	dw	0
   251  000729  00                 	db	0
   252  00072A  0000               	dw	0
   253  00072C  07                 	db	7
   254  00072D  E000               	dw	57344
   255  00072F  04                 	db	4
   256  000730  2000               	dw	8192
   257  000732  04                 	db	4
   258  000733  2000               	dw	8192
   259  000735  04                 	db	4
   260  000736  2000               	dw	8192
   261  000738  04                 	db	4
   262  000739  2000               	dw	8192
   263  00073B  07                 	db	7
   264  00073C  E000               	dw	57344
   265  00073E  00                 	db	0
   266  00073F  0000               	dw	0
   267  000741  00                 	db	0
   268  000742  0000               	dw	0
   269  000744  04                 	db	4
   270  000745  8000               	dw	32768
   271  000747  04                 	db	4
   272  000748  8000               	dw	32768
   273  00074A  04                 	db	4
   274  00074B  8000               	dw	32768
   275  00074D  0F                 	db	15
   276  00074E  E000               	dw	57344
   277  000750  04                 	db	4
   278  000751  8000               	dw	32768
   279  000753  04                 	db	4
   280  000754  8000               	dw	32768
   281  000756  04                 	db	4
   282  000757  8000               	dw	32768
   283  000759  00                 	db	0
   284  00075A  0000               	dw	0
   285  00075C  04                 	db	4
   286  00075D  0000               	dw	0
   287  00075F  02                 	db	2
   288  000760  0000               	dw	0
   289  000762  08                 	db	8
   290  000763  0000               	dw	0
   291  000765  04                 	db	4
   292  000766  0000               	dw	0
   293  000768  00                 	db	0
   294  000769  0000               	dw	0
   295  00076B  00                 	db	0
   296  00076C  0000               	dw	0
   297  00076E  02                 	db	2
   298  00076F  0000               	dw	0
   299  000771  0C                 	db	12
   300  000772  2000               	dw	8192
   301  000774  04                 	db	4
   302  000775  2000               	dw	8192
   303  000777  04                 	db	4
   304  000778  2000               	dw	8192
   305  00077A  07                 	db	7
   306  00077B  C000               	dw	49152
   307  00077D  04                 	db	4
   308  00077E  0000               	dw	0
   309  000780  04                 	db	4
   310  000781  0000               	dw	0
   311  000783  00                 	db	0
   312  000784  0000               	dw	0
   313  000786  04                 	db	4
   314  000787  2000               	dw	8192
   315  000789  02                 	db	2
   316  00078A  2000               	dw	8192
   317  00078C  01                 	db	1
   318  00078D  2000               	dw	8192
   319  00078F  00                 	db	0
   320  000790  2000               	dw	8192
   321  000792  00                 	db	0
   322  000793  4000               	dw	16384
   323  000795  00                 	db	0
   324  000796  8000               	dw	32768
   325  000798  07                 	db	7
   326  000799  0000               	dw	0
   327  00079B  00                 	db	0
   328  00079C  0000               	dw	0
   329  00079E  00                 	db	0
   330  00079F  8000               	dw	32768
   331  0007A1  01                 	db	1
   332  0007A2  0000               	dw	0
   333  0007A4  02                 	db	2
   334  0007A5  0000               	dw	0
   335  0007A7  01                 	db	1
   336  0007A8  0000               	dw	0
   337  0007AA  00                 	db	0
   338  0007AB  8000               	dw	32768
   339  0007AD  00                 	db	0
   340  0007AE  4000               	dw	16384
   341  0007B0  00                 	db	0
   342  0007B1  2000               	dw	8192
   343  0007B3  00                 	db	0
   344  0007B4  0000               	dw	0
   345  0007B6  00                 	db	0
   346  0007B7  0000               	dw	0
   347  0007B9  05                 	db	5
   348  0007BA  2000               	dw	8192
   349  0007BC  05                 	db	5
   350  0007BD  2000               	dw	8192
   351  0007BF  05                 	db	5
   352  0007C0  2000               	dw	8192
   353  0007C2  05                 	db	5
   354  0007C3  2000               	dw	8192
   355  0007C5  07                 	db	7
   356  0007C6  E000               	dw	57344
   357  0007C8  00                 	db	0
   358  0007C9  0000               	dw	0
   359  0007CB  00                 	db	0
   360  0007CC  0000               	dw	0
   361  0007CE  07                 	db	7
   362  0007CF  0000               	dw	0
   363  0007D1  04                 	db	4
   364  0007D2  0000               	dw	0
   365  0007D4  04                 	db	4
   366  0007D5  2000               	dw	8192
   367  0007D7  0C                 	db	12
   368  0007D8  2000               	dw	8192
   369  0007DA  04                 	db	4
   370  0007DB  2000               	dw	8192
   371  0007DD  04                 	db	4
   372  0007DE  C000               	dw	49152
   373  0007E0  07                 	db	7
   374  0007E1  0000               	dw	0
   375  0007E3  00                 	db	0
   376  0007E4  0000               	dw	0
   377  0007E6  04                 	db	4
   378  0007E7  2000               	dw	8192
   379  0007E9  04                 	db	4
   380  0007EA  2000               	dw	8192
   381  0007EC  04                 	db	4
   382  0007ED  2000               	dw	8192
   383  0007EF  04                 	db	4
   384  0007F0  2000               	dw	8192
   385  0007F2  04                 	db	4
   386  0007F3  2000               	dw	8192
   387  0007F5  07                 	db	7
   388  0007F6  E000               	dw	57344
   389  0007F8  00                 	db	0
   390  0007F9  0000               	dw	0
   391  0007FB  00                 	db	0
   392  0007FC  0000               	dw	0
   393  0007FE  00                 	db	0
   394  0007FF  0000               	dw	0
   395  000801  0C                 	db	12
   396  000802  0000               	dw	0
   397  000804  03                 	db	3
   398  000805  0000               	dw	0
   399  000807  00                 	db	0
   400  000808  2000               	dw	8192
   401  00080A  00                 	db	0
   402  00080B  2000               	dw	8192
   403  00080D  00                 	db	0
   404  00080E  C000               	dw	49152
   405  000810  0F                 	db	15
   406  000811  0000               	dw	0
   407  000813  00                 	db	0
   408  000814  0000               	dw	0
   409  000816  00                 	db	0
   410  000817  0000               	dw	0
   411  000819  00                 	db	0
   412  00081A  0000               	dw	0
   413  00081C  00                 	db	0
   414  00081D  0000               	dw	0
   415  00081F  00                 	db	0
   416  000820  0000               	dw	0
   417  000822  00                 	db	0
   418  000823  0000               	dw	0
   419  000825  00                 	db	0
   420  000826  0000               	dw	0
   421                           
   422                           ;initializer for _number_font
   423  000828  07                 	db	7
   424  000829  C000               	dw	49152
   425  00082B  08                 	db	8
   426  00082C  A000               	dw	40960
   427  00082E  09                 	db	9
   428  00082F  2000               	dw	8192
   429  000831  0A                 	db	10
   430  000832  2000               	dw	8192
   431  000834  07                 	db	7
   432  000835  C000               	dw	49152
   433  000837  00                 	db	0
   434  000838  0000               	dw	0
   435  00083A  00                 	db	0
   436  00083B  0000               	dw	0
   437  00083D  00                 	db	0
   438  00083E  0000               	dw	0
   439  000840  02                 	db	2
   440  000841  2000               	dw	8192
   441  000843  04                 	db	4
   442  000844  2000               	dw	8192
   443  000846  0F                 	db	15
   444  000847  E000               	dw	57344
   445  000849  00                 	db	0
   446  00084A  2000               	dw	8192
   447  00084C  00                 	db	0
   448  00084D  2000               	dw	8192
   449  00084F  00                 	db	0
   450  000850  0000               	dw	0
   451  000852  00                 	db	0
   452  000853  0000               	dw	0
   453  000855  00                 	db	0
   454  000856  0000               	dw	0
   455  000858  04                 	db	4
   456  000859  6000               	dw	24576
   457  00085B  08                 	db	8
   458  00085C  6000               	dw	24576
   459  00085E  08                 	db	8
   460  00085F  A000               	dw	40960
   461  000861  08                 	db	8
   462  000862  A000               	dw	40960
   463  000864  07                 	db	7
   464  000865  2000               	dw	8192
   465  000867  00                 	db	0
   466  000868  0000               	dw	0
   467  00086A  00                 	db	0
   468  00086B  0000               	dw	0
   469  00086D  00                 	db	0
   470  00086E  0000               	dw	0
   471  000870  04                 	db	4
   472  000871  4000               	dw	16384
   473  000873  08                 	db	8
   474  000874  2000               	dw	8192
   475  000876  09                 	db	9
   476  000877  2000               	dw	8192
   477  000879  09                 	db	9
   478  00087A  2000               	dw	8192
   479  00087C  06                 	db	6
   480  00087D  C000               	dw	49152
   481  00087F  00                 	db	0
   482  000880  0000               	dw	0
   483  000882  00                 	db	0
   484  000883  0000               	dw	0
   485  000885  00                 	db	0
   486  000886  0000               	dw	0
   487  000888  03                 	db	3
   488  000889  C000               	dw	49152
   489  00088B  04                 	db	4
   490  00088C  4000               	dw	16384
   491  00088E  08                 	db	8
   492  00088F  4000               	dw	16384
   493  000891  0F                 	db	15
   494  000892  E000               	dw	57344
   495  000894  00                 	db	0
   496  000895  4000               	dw	16384
   497  000897  00                 	db	0
   498  000898  0000               	dw	0
   499  00089A  00                 	db	0
   500  00089B  0000               	dw	0
   501  00089D  00                 	db	0
   502  00089E  0000               	dw	0
   503  0008A0  0E                 	db	14
   504  0008A1  4000               	dw	16384
   505  0008A3  0A                 	db	10
   506  0008A4  2000               	dw	8192
   507  0008A6  0A                 	db	10
   508  0008A7  2000               	dw	8192
   509  0008A9  0A                 	db	10
   510  0008AA  2000               	dw	8192
   511  0008AC  09                 	db	9
   512  0008AD  C000               	dw	49152
   513  0008AF  00                 	db	0
   514  0008B0  0000               	dw	0
   515  0008B2  00                 	db	0
   516  0008B3  0000               	dw	0
   517  0008B5  00                 	db	0
   518  0008B6  0000               	dw	0
   519  0008B8  07                 	db	7
   520  0008B9  C000               	dw	49152
   521  0008BB  0A                 	db	10
   522  0008BC  2000               	dw	8192
   523  0008BE  0A                 	db	10
   524  0008BF  2000               	dw	8192
   525  0008C1  0A                 	db	10
   526  0008C2  2000               	dw	8192
   527  0008C4  01                 	db	1
   528  0008C5  C000               	dw	49152
   529  0008C7  00                 	db	0
   530  0008C8  0000               	dw	0
   531  0008CA  00                 	db	0
   532  0008CB  0000               	dw	0
   533  0008CD  00                 	db	0
   534  0008CE  0000               	dw	0
   535  0008D0  0C                 	db	12
   536  0008D1  0000               	dw	0
   537  0008D3  08                 	db	8
   538  0008D4  0000               	dw	0
   539  0008D6  08                 	db	8
   540  0008D7  6000               	dw	24576
   541  0008D9  09                 	db	9
   542  0008DA  8000               	dw	32768
   543  0008DC  0E                 	db	14
   544  0008DD  0000               	dw	0
   545  0008DF  00                 	db	0
   546  0008E0  0000               	dw	0
   547  0008E2  00                 	db	0
   548  0008E3  0000               	dw	0
   549  0008E5  00                 	db	0
   550  0008E6  0000               	dw	0
   551  0008E8  06                 	db	6
   552  0008E9  C000               	dw	49152
   553  0008EB  09                 	db	9
   554  0008EC  2000               	dw	8192
   555  0008EE  09                 	db	9
   556  0008EF  2000               	dw	8192
   557  0008F1  09                 	db	9
   558  0008F2  2000               	dw	8192
   559  0008F4  06                 	db	6
   560  0008F5  C000               	dw	49152
   561  0008F7  00                 	db	0
   562  0008F8  0000               	dw	0
   563  0008FA  00                 	db	0
   564  0008FB  0000               	dw	0
   565  0008FD  00                 	db	0
   566  0008FE  0000               	dw	0
   567  000900  07                 	db	7
   568  000901  0000               	dw	0
   569  000903  08                 	db	8
   570  000904  A000               	dw	40960
   571  000906  08                 	db	8
   572  000907  A000               	dw	40960
   573  000909  08                 	db	8
   574  00090A  A000               	dw	40960
   575  00090C  07                 	db	7
   576  00090D  C000               	dw	49152
   577  00090F  00                 	db	0
   578  000910  0000               	dw	0
   579  000912  00                 	db	0
   580  000913  0000               	dw	0
   581  000915  00                 	db	0
   582  000916  0000               	dw	0
   583  000918  00                 	db	0
   584  000919  0000               	dw	0
   585  00091B  00                 	db	0
   586  00091C  0000               	dw	0
   587  00091E  02                 	db	2
   588  00091F  4000               	dw	16384
   589  000921  00                 	db	0
   590  000922  0000               	dw	0
   591  000924  00                 	db	0
   592  000925  0000               	dw	0
   593  000927  00                 	db	0
   594  000928  0000               	dw	0
   595  00092A  00                 	db	0
   596  00092B  0000               	dw	0
   597  00092D  00                 	db	0
   598  00092E  0000               	dw	0
   599                           
   600                           	psect	idataBANK0
   601  000FFD                     __pidataBANK0:
   602                           	opt stack 0
   603                           
   604                           ;initializer for _light_interval
   605  000FFD  03E8               	dw	1000
   606  000FFF  0000               	dw	0
   607                           
   608                           	psect	smallconst
   609  000600                     __psmallconst:
   610                           	opt stack 0
   611  000600  00                 	db	0
   612  000601                     _N:
   613                           	opt stack 0
   614  000601  A118               	dw	41240
   615  000603  0007               	dw	7
   616  000605                     __end_of_N:
   617                           	opt stack 0
   618  000605                     _time_control_count:
   619                           	opt stack 0
   620  000605  0BDC               	dw	3036
   621  000607  0000               	dw	0
   622  000609                     __end_of_time_control_count:
   623                           	opt stack 0
   624  000609                     _S:
   625                           	opt stack 0
   626  000609  005A               	dw	90
   627  00060B                     __end_of_S:
   628                           	opt stack 0
   629  0000                     _ANSELA	set	3896
   630  0000                     _ANSELB	set	3897
   631  0000                     _ANSELC	set	3898
   632  0000                     _LATA	set	3977
   633  0000                     _LATBbits	set	3978
   634  0000                     _LATC	set	3979
   635  0000                     _OSCCON	set	4051
   636  0000                     _PORTA	set	3968
   637  0000                     _PORTB	set	3969
   638  0000                     _PORTBbits	set	3969
   639  0000                     _PORTC	set	3970
   640  0000                     _T1CON	set	4045
   641  0000                     _T3CON	set	4017
   642  0000                     _TMR1H	set	4047
   643  0000                     _TMR1L	set	4046
   644  0000                     _TMR3H	set	4019
   645  0000                     _TMR3L	set	4018
   646  0000                     _TRISA	set	3986
   647  0000                     _TRISB	set	3987
   648  0000                     _TRISC	set	3988
   649  0000                     _GIE	set	32663
   650  0000                     _PEIE	set	32662
   651  0000                     _TMR1IE	set	31976
   652  0000                     _TMR1IF	set	31984
   653  0000                     _TMR3IE	set	32001
   654  0000                     _TMR3IF	set	32009
   655                           
   656                           ; #config settings
   657  00060B  00                 	db	0	; dummy byte at the end
   658  0000                     
   659                           	psect	cinit
   660  000D82                     __pcinit:
   661                           	opt stack 0
   662  000D82                     start_initialization:
   663                           	opt stack 0
   664  000D82                     __initialization:
   665                           	opt stack 0
   666                           
   667                           ; Clear objects allocated to BIGRAM (270 bytes)
   668  000D82  EE03  F096         	lfsr	0,__pbssBIGRAM
   669  000D86  EE11 F00E          	lfsr	1,270
   670  000D8A                     clear_0:
   671  000D8A  6AEE               	clrf	postinc0,c
   672  000D8C  50E5               	movf	postdec1,w,c
   673  000D8E  50E1               	movf	fsr1l,w,c
   674  000D90  E1FC               	bnz	clear_0
   675  000D92  50E2               	movf	fsr1h,w,c
   676  000D94  E1FA               	bnz	clear_0
   677                           
   678                           ; Clear objects allocated to COMRAM (14 bytes)
   679  000D96  EE00  F030         	lfsr	0,__pbssCOMRAM
   680  000D9A  0E0E               	movlw	14
   681  000D9C                     clear_1:
   682  000D9C  6AEE               	clrf	postinc0,c
   683  000D9E  06E8               	decf	wreg,f,c
   684  000DA0  E1FD               	bnz	clear_1
   685                           
   686                           ; Initialize objects allocated to BIGRAM (804 bytes)
   687                           ; load TBLPTR registers with __pidataBIGRAM
   688  000DA2  0E0C               	movlw	low __pidataBIGRAM
   689  000DA4  6EF6               	movwf	tblptrl,c
   690  000DA6  0E06               	movlw	high __pidataBIGRAM
   691  000DA8  6EF7               	movwf	tblptrh,c
   692  000DAA  0E00               	movlw	low (__pidataBIGRAM shr (0+16))
   693  000DAC  6EF8               	movwf	tblptru,c
   694  000DAE  EE00  F072         	lfsr	0,__pdataBIGRAM
   695  000DB2  EE13 F024          	lfsr	1,804
   696  000DB6                     copy_data0:
   697  000DB6  0009               	tblrd		*+
   698  000DB8  CFF5 FFEE          	movff	tablat,postinc0
   699  000DBC  50E5               	movf	postdec1,w,c
   700  000DBE  50E1               	movf	fsr1l,w,c
   701  000DC0  E1FA               	bnz	copy_data0
   702  000DC2  50E2               	movf	fsr1h,w,c
   703  000DC4  E1F8               	bnz	copy_data0
   704                           
   705                           ; Initialize objects allocated to BANK0 (4 bytes)
   706                           ; load TBLPTR registers with __pidataBANK0
   707  000DC6  0EFD               	movlw	low __pidataBANK0
   708  000DC8  6EF6               	movwf	tblptrl,c
   709  000DCA  0E0F               	movlw	high __pidataBANK0
   710  000DCC  6EF7               	movwf	tblptrh,c
   711  000DCE  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   712  000DD0  6EF8               	movwf	tblptru,c
   713  000DD2  EE00  F06E         	lfsr	0,__pdataBANK0
   714  000DD6  EE10 F004          	lfsr	1,4
   715  000DDA                     copy_data1:
   716  000DDA  0009               	tblrd		*+
   717  000DDC  CFF5 FFEE          	movff	tablat,postinc0
   718  000DE0  50E5               	movf	postdec1,w,c
   719  000DE2  50E1               	movf	fsr1l,w,c
   720  000DE4  E1FA               	bnz	copy_data1
   721                           
   722                           ; Initialize objects allocated to COMRAM (7 bytes)
   723                           ; load TBLPTR registers with __pidataCOMRAM
   724  000DE6  0EF6               	movlw	low __pidataCOMRAM
   725  000DE8  6EF6               	movwf	tblptrl,c
   726  000DEA  0E0F               	movlw	high __pidataCOMRAM
   727  000DEC  6EF7               	movwf	tblptrh,c
   728  000DEE  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   729  000DF0  6EF8               	movwf	tblptru,c
   730  000DF2  EE00  F03E         	lfsr	0,__pdataCOMRAM
   731  000DF6  EE10 F007          	lfsr	1,7
   732  000DFA                     copy_data2:
   733  000DFA  0009               	tblrd		*+
   734  000DFC  CFF5 FFEE          	movff	tablat,postinc0
   735  000E00  50E5               	movf	postdec1,w,c
   736  000E02  50E1               	movf	fsr1l,w,c
   737  000E04  E1FA               	bnz	copy_data2
   738  000E06                     end_of_initialization:
   739                           	opt stack 0
   740  000E06                     __end_of__initialization:
   741                           	opt stack 0
   742  000E06  9045               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   743  000E08  9245               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   744  000E0A  0E00               	movlw	low (__Lsmallconst shr (0+16))
   745  000E0C  6EF8               	movwf	tblptru,c
   746  000E0E  0E06               	movlw	high __Lsmallconst
   747  000E10  6EF7               	movwf	tblptrh,c
   748  000E12  0100               	movlb	0
   749  000E14  EF98  F004         	goto	_main	;jump to C main() function
   750                           tblptru	equ	0xFF8
   751                           tblptrh	equ	0xFF7
   752                           tblptrl	equ	0xFF6
   753                           tablat	equ	0xFF5
   754                           postinc0	equ	0xFEE
   755                           wreg	equ	0xFE8
   756                           postdec1	equ	0xFE5
   757                           fsr1h	equ	0xFE2
   758                           fsr1l	equ	0xFE1
   759                           
   760                           	psect	bssCOMRAM
   761  000030                     __pbssCOMRAM:
   762                           	opt stack 0
   763  000030                     _light_point:
   764                           	opt stack 0
   765  000030                     	ds	4
   766  000034                     _color_count:
   767                           	opt stack 0
   768  000034                     	ds	2
   769  000036                     _count:
   770                           	opt stack 0
   771  000036                     	ds	2
   772  000038                     _co:
   773                           	opt stack 0
   774  000038                     	ds	1
   775  000039                     _eight_count:
   776                           	opt stack 0
   777  000039                     	ds	1
   778  00003A                     _letter_start:
   779                           	opt stack 0
   780  00003A                     	ds	1
   781  00003B                     _min:
   782                           	opt stack 0
   783  00003B                     	ds	1
   784  00003C                     _sec:
   785                           	opt stack 0
   786  00003C                     	ds	1
   787  00003D                     	ds	1
   788                           tblptru	equ	0xFF8
   789                           tblptrh	equ	0xFF7
   790                           tblptrl	equ	0xFF6
   791                           tablat	equ	0xFF5
   792                           postinc0	equ	0xFEE
   793                           wreg	equ	0xFE8
   794                           postdec1	equ	0xFE5
   795                           fsr1h	equ	0xFE2
   796                           fsr1l	equ	0xFE1
   797                           
   798                           	psect	dataCOMRAM
   799  00003E                     __pdataCOMRAM:
   800                           	opt stack 0
   801  00003E                     _numlist:
   802                           	opt stack 0
   803  00003E                     	ds	5
   804  000043                     _time_count:
   805                           	opt stack 0
   806  000043                     	ds	2
   807                           tblptru	equ	0xFF8
   808                           tblptrh	equ	0xFF7
   809                           tblptrl	equ	0xFF6
   810                           tablat	equ	0xFF5
   811                           postinc0	equ	0xFEE
   812                           wreg	equ	0xFE8
   813                           postdec1	equ	0xFE5
   814                           fsr1h	equ	0xFE2
   815                           fsr1l	equ	0xFE1
   816                           
   817                           	psect	dataBANK0
   818  00006E                     __pdataBANK0:
   819                           	opt stack 0
   820  00006E                     _light_interval:
   821                           	opt stack 0
   822  00006E                     	ds	4
   823                           tblptru	equ	0xFF8
   824                           tblptrh	equ	0xFF7
   825                           tblptrl	equ	0xFF6
   826                           tablat	equ	0xFF5
   827                           postinc0	equ	0xFEE
   828                           wreg	equ	0xFE8
   829                           postdec1	equ	0xFE5
   830                           fsr1h	equ	0xFE2
   831                           fsr1l	equ	0xFE1
   832                           
   833                           	psect	bssBIGRAM
   834  000396                     __pbssBIGRAM:
   835                           	opt stack 0
   836  000396                     _screen:
   837                           	opt stack 0
   838  000396                     	ds	270
   839                           tblptru	equ	0xFF8
   840                           tblptrh	equ	0xFF7
   841                           tblptrl	equ	0xFF6
   842                           tablat	equ	0xFF5
   843                           postinc0	equ	0xFEE
   844                           wreg	equ	0xFE8
   845                           postdec1	equ	0xFE5
   846                           fsr1h	equ	0xFE2
   847                           fsr1l	equ	0xFE1
   848                           
   849                           	psect	dataBIGRAM
   850  000072                     __pdataBIGRAM:
   851                           	opt stack 0
   852  000072                     _ThankYou:
   853                           	opt stack 0
   854  000072                     	ds	270
   855  000180                     _Youkoso:
   856                           	opt stack 0
   857  000180                     	ds	270
   858  00028E                     _number_font:
   859                           	opt stack 0
   860  00028E                     	ds	264
   861                           tblptru	equ	0xFF8
   862                           tblptrh	equ	0xFF7
   863                           tblptrl	equ	0xFF6
   864                           tablat	equ	0xFF5
   865                           postinc0	equ	0xFEE
   866                           wreg	equ	0xFE8
   867                           postdec1	equ	0xFE5
   868                           fsr1h	equ	0xFE2
   869                           fsr1l	equ	0xFE1
   870                           
   871                           	psect	cstackBANK0
   872  000060                     __pcstackBANK0:
   873                           	opt stack 0
   874  000060                     light@h:
   875                           	opt stack 0
   876                           
   877                           ; 1 bytes @ 0x0
   878  000060                     	ds	1
   879  000061                     light@l:
   880                           	opt stack 0
   881                           
   882                           ; 2 bytes @ 0x1
   883  000061                     	ds	2
   884  000063                     ??_light:
   885                           
   886                           ; 0 bytes @ 0x3
   887  000063                     	ds	1
   888  000064                     light@c:
   889                           	opt stack 0
   890                           
   891                           ; 1 bytes @ 0x4
   892  000064                     	ds	1
   893  000065                     ??_main:
   894                           
   895                           ; 0 bytes @ 0x5
   896  000065                     	ds	8
   897  00006D                     main@prev:
   898                           	opt stack 0
   899                           
   900                           ; 1 bytes @ 0xD
   901  00006D                     	ds	1
   902                           tblptru	equ	0xFF8
   903                           tblptrh	equ	0xFF7
   904                           tblptrl	equ	0xFF6
   905                           tablat	equ	0xFF5
   906                           postinc0	equ	0xFEE
   907                           wreg	equ	0xFE8
   908                           postdec1	equ	0xFE5
   909                           fsr1h	equ	0xFE2
   910                           fsr1l	equ	0xFE1
   911                           
   912                           	psect	cstackCOMRAM
   913  000001                     __pcstackCOMRAM:
   914                           	opt stack 0
   915  000001                     ?___wmul:
   916                           	opt stack 0
   917  000001                     ?___awdiv:
   918                           	opt stack 0
   919  000001                     ?___lwmod:
   920                           	opt stack 0
   921  000001                     ___wmul@multiplier:
   922                           	opt stack 0
   923  000001                     ___awdiv@dividend:
   924                           	opt stack 0
   925  000001                     ___lwmod@dividend:
   926                           	opt stack 0
   927  000001                     get_color@x:
   928                           	opt stack 0
   929                           
   930                           ; 4 bytes @ 0x0
   931  000001                     	ds	2
   932  000003                     ___wmul@multiplicand:
   933                           	opt stack 0
   934  000003                     ___awdiv@divisor:
   935                           	opt stack 0
   936  000003                     ___lwmod@divisor:
   937                           	opt stack 0
   938                           
   939                           ; 2 bytes @ 0x2
   940  000003                     	ds	2
   941  000005                     ___awdiv@counter:
   942                           	opt stack 0
   943  000005                     ___lwmod@counter:
   944                           	opt stack 0
   945  000005                     ___wmul@product:
   946                           	opt stack 0
   947                           
   948                           ; 2 bytes @ 0x4
   949  000005                     	ds	1
   950  000006                     ___awdiv@sign:
   951                           	opt stack 0
   952                           
   953                           ; 1 bytes @ 0x5
   954  000006                     	ds	1
   955  000007                     ?___lldiv:
   956                           	opt stack 0
   957  000007                     ___awdiv@quotient:
   958                           	opt stack 0
   959  000007                     ___lldiv@dividend:
   960                           	opt stack 0
   961                           
   962                           ; 4 bytes @ 0x6
   963  000007                     	ds	2
   964  000009                     ?___awmod:
   965                           	opt stack 0
   966  000009                     ___awmod@dividend:
   967                           	opt stack 0
   968                           
   969                           ; 2 bytes @ 0x8
   970  000009                     	ds	2
   971  00000B                     ___awmod@divisor:
   972                           	opt stack 0
   973  00000B                     ___lldiv@divisor:
   974                           	opt stack 0
   975                           
   976                           ; 4 bytes @ 0xA
   977  00000B                     	ds	2
   978  00000D                     ___awmod@counter:
   979                           	opt stack 0
   980                           
   981                           ; 1 bytes @ 0xC
   982  00000D                     	ds	1
   983  00000E                     ___awmod@sign:
   984                           	opt stack 0
   985                           
   986                           ; 1 bytes @ 0xD
   987  00000E                     	ds	1
   988  00000F                     i2light@h:
   989                           	opt stack 0
   990  00000F                     ___lldiv@quotient:
   991                           	opt stack 0
   992                           
   993                           ; 4 bytes @ 0xE
   994  00000F                     	ds	1
   995  000010                     i2light@l:
   996                           	opt stack 0
   997                           
   998                           ; 2 bytes @ 0xF
   999  000010                     	ds	2
  1000  000012                     ??i2_light:
  1001                           
  1002                           ; 0 bytes @ 0x11
  1003  000012                     	ds	1
  1004  000013                     ___lldiv@counter:
  1005                           	opt stack 0
  1006  000013                     i2light@c:
  1007                           	opt stack 0
  1008                           
  1009                           ; 1 bytes @ 0x12
  1010  000013                     	ds	1
  1011  000014                     ??_timer:
  1012                           
  1013                           ; 0 bytes @ 0x13
  1014  000014                     	ds	24
  1015  00002C                     timer@i:
  1016                           	opt stack 0
  1017                           
  1018                           ; 2 bytes @ 0x2B
  1019  00002C                     	ds	2
  1020  00002E                     timer@j:
  1021                           	opt stack 0
  1022                           
  1023                           ; 2 bytes @ 0x2D
  1024  00002E                     	ds	2
  1025                           tblptru	equ	0xFF8
  1026                           tblptrh	equ	0xFF7
  1027                           tblptrl	equ	0xFF6
  1028                           tablat	equ	0xFF5
  1029                           postinc0	equ	0xFEE
  1030                           wreg	equ	0xFE8
  1031                           postdec1	equ	0xFE5
  1032                           fsr1h	equ	0xFE2
  1033                           fsr1l	equ	0xFE1
  1034                           
  1035 ;;
  1036 ;;Main: autosize = 0, tempsize = 8, incstack = 0, save=0
  1037 ;;
  1038 ;; *************** function _main *****************
  1039 ;; Defined at:
  1040 ;;		line 363 in file "light0.c"
  1041 ;; Parameters:    Size  Location     Type
  1042 ;;		None
  1043 ;; Auto vars:     Size  Location     Type
  1044 ;;  prev            1   13[BANK0 ] unsigned char 
  1045 ;; Return value:  Size  Location     Type
  1046 ;;		None               void
  1047 ;; Registers used:
  1048 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1049 ;; Tracked objects:
  1050 ;;		On entry : 0/0
  1051 ;;		On exit  : 0/0
  1052 ;;		Unchanged: 0/0
  1053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1054 ;;      Params:         0       0       0       0       0       0       0
  1055 ;;      Locals:         0       1       0       0       0       0       0
  1056 ;;      Temps:          0       8       0       0       0       0       0
  1057 ;;      Totals:         0       9       0       0       0       0       0
  1058 ;;Total ram usage:        9 bytes
  1059 ;; Hardware stack levels required when called:    3
  1060 ;; This function calls:
  1061 ;;		_light
  1062 ;; This function is called by:
  1063 ;;		Startup code after reset
  1064 ;; This function uses a non-reentrant model
  1065 ;;
  1066                           
  1067                           	psect	text0
  1068  000930                     __ptext0:
  1069                           	opt stack 0
  1070  000930                     _main:
  1071                           	opt stack 28
  1072                           
  1073                           ;light0.c: 364: OSCCON = 0b01110010 ;
  1074                           
  1075                           ;incstack = 0
  1076  000930  0E72               	movlw	114
  1077  000932  6ED3               	movwf	4051,c	;volatile
  1078                           
  1079                           ;light0.c: 365: ANSELA = 0b00000000 ;
  1080  000934  0E00               	movlw	0
  1081  000936  010F               	movlb	15	; () banked
  1082  000938  6F38               	movwf	56,b	;volatile
  1083                           
  1084                           ;light0.c: 366: ANSELB = 0b00000000 ;
  1085  00093A  0E00               	movlw	0
  1086  00093C  010F               	movlb	15	; () banked
  1087  00093E  6F39               	movwf	57,b	;volatile
  1088                           
  1089                           ;light0.c: 367: ANSELC = 0b00000000 ;
  1090  000940  0E00               	movlw	0
  1091  000942  010F               	movlb	15	; () banked
  1092  000944  6F3A               	movwf	58,b	;volatile
  1093                           
  1094                           ;light0.c: 368: TRISA = 0b00000000 ;
  1095  000946  0E00               	movlw	0
  1096  000948  6E92               	movwf	3986,c	;volatile
  1097                           
  1098                           ;light0.c: 369: TRISB = 0b00010000 ;
  1099  00094A  0E10               	movlw	16
  1100  00094C  6E93               	movwf	3987,c	;volatile
  1101                           
  1102                           ;light0.c: 370: TRISC = 0b00000000 ;
  1103  00094E  0E00               	movlw	0
  1104  000950  6E94               	movwf	3988,c	;volatile
  1105                           
  1106                           ;light0.c: 371: PORTA = 0b00000000 ;
  1107  000952  0E00               	movlw	0
  1108  000954  6E80               	movwf	3968,c	;volatile
  1109                           
  1110                           ;light0.c: 372: PORTB = 0b00000000 ;
  1111  000956  0E00               	movlw	0
  1112  000958  6E81               	movwf	3969,c	;volatile
  1113                           
  1114                           ;light0.c: 373: PORTC = 0b00000000 ;
  1115  00095A  0E00               	movlw	0
  1116  00095C  6E82               	movwf	3970,c	;volatile
  1117                           
  1118                           ;light0.c: 376: T1CON = 0b00110011;
  1119  00095E  0E33               	movlw	51
  1120  000960  6ECD               	movwf	4045,c	;volatile
  1121                           
  1122                           ; BSR set to: 15
  1123                           ;light0.c: 377: TMR1H = time_control_count >> 8 ;
  1124  000962  0E05               	movlw	low _time_control_count
  1125  000964  6EF6               	movwf	tblptrl,c
  1126  000966                     	if	0	;There is only one active tblptr byte
  1127  000966                     	endif
  1128  000966                     	if	0	;There are less than 3 active tblptr bytes
  1129  000966                     	endif
  1130  000966  0009               	tblrd		*+
  1131  000968  CFF5 F065          	movff	tablat,??_main
  1132  00096C  0009               	tblrd		*+
  1133  00096E  CFF5 F066          	movff	tablat,??_main+1
  1134  000972  0009               	tblrd		*+
  1135  000974  CFF5 F067          	movff	tablat,??_main+2
  1136  000978  0009               	tblrd		*+
  1137  00097A  CFF5 F068          	movff	tablat,??_main+3
  1138  00097E  C066  F065         	movff	??_main+1,??_main
  1139  000982  C067  F066         	movff	??_main+2,??_main+1
  1140  000986  C068  F067         	movff	??_main+3,??_main+2
  1141  00098A  0100               	movlb	0	; () banked
  1142  00098C  6B68               	clrf	(??_main+3)& (0+255),b
  1143  00098E  0100               	movlb	0	; () banked
  1144  000990  5165               	movf	??_main& (0+255),w,b
  1145  000992  6ECF               	movwf	4047,c	;volatile
  1146                           
  1147                           ; BSR set to: 0
  1148                           ;light0.c: 378: TMR1L = time_control_count & 0x00ff ;
  1149  000994  0E05               	movlw	low _time_control_count
  1150  000996  6EF6               	movwf	tblptrl,c
  1151  000998                     	if	0	;There is only one active tblptr byte
  1152  000998                     	endif
  1153  000998                     	if	0	;There are less than 3 active tblptr bytes
  1154  000998                     	endif
  1155  000998  0008               	tblrd		*
  1156  00099A  CFF5 FFCE          	movff	tablat,4046	;volatile
  1157                           
  1158                           ; BSR set to: 0
  1159                           ;light0.c: 379: TMR1IF = 0 ;
  1160  00099E  909E               	bcf	3998,0,c	;volatile
  1161                           
  1162                           ; BSR set to: 0
  1163                           ;light0.c: 380: TMR1IE = 1;
  1164  0009A0  809D               	bsf	3997,0,c	;volatile
  1165                           
  1166                           ; BSR set to: 0
  1167                           ;light0.c: 382: T3CON = 0b00110011;
  1168  0009A2  0E33               	movlw	51
  1169  0009A4  6EB1               	movwf	4017,c	;volatile
  1170                           
  1171                           ; BSR set to: 0
  1172                           ;light0.c: 383: TMR3H = (65535-light_interval) >> 8 ;
  1173  0009A6  C06E  F065         	movff	_light_interval,??_main
  1174  0009AA  C06F  F066         	movff	_light_interval+1,??_main+1
  1175  0009AE  C070  F067         	movff	_light_interval+2,??_main+2
  1176  0009B2  C071  F068         	movff	_light_interval+3,??_main+3
  1177  0009B6  0100               	movlb	0	; () banked
  1178  0009B8  1F65               	comf	??_main& (0+255),f,b
  1179  0009BA  1F66               	comf	(??_main+1)& (0+255),f,b
  1180  0009BC  1F67               	comf	(??_main+2)& (0+255),f,b
  1181  0009BE  1F68               	comf	(??_main+3)& (0+255),f,b
  1182  0009C0  2B65               	incf	??_main& (0+255),f,b
  1183  0009C2  0E00               	movlw	0
  1184  0009C4  2366               	addwfc	(??_main+1)& (0+255),f,b
  1185  0009C6  2367               	addwfc	(??_main+2)& (0+255),f,b
  1186  0009C8  2368               	addwfc	(??_main+3)& (0+255),f,b
  1187  0009CA  0EFF               	movlw	255
  1188  0009CC  0100               	movlb	0	; () banked
  1189  0009CE  2565               	addwf	??_main& (0+255),w,b
  1190  0009D0  0100               	movlb	0	; () banked
  1191  0009D2  6F69               	movwf	(??_main+4)& (0+255),b
  1192  0009D4  0EFF               	movlw	255
  1193  0009D6  0100               	movlb	0	; () banked
  1194  0009D8  2166               	addwfc	(??_main+1)& (0+255),w,b
  1195  0009DA  0100               	movlb	0	; () banked
  1196  0009DC  6F6A               	movwf	(??_main+5)& (0+255),b
  1197  0009DE  0E00               	movlw	0
  1198  0009E0  0100               	movlb	0	; () banked
  1199  0009E2  2167               	addwfc	(??_main+2)& (0+255),w,b
  1200  0009E4  0100               	movlb	0	; () banked
  1201  0009E6  6F6B               	movwf	(??_main+6)& (0+255),b
  1202  0009E8  0E00               	movlw	0
  1203  0009EA  0100               	movlb	0	; () banked
  1204  0009EC  2168               	addwfc	(??_main+3)& (0+255),w,b
  1205  0009EE  0100               	movlb	0	; () banked
  1206  0009F0  6F6C               	movwf	(??_main+7)& (0+255),b
  1207  0009F2  C06A  F069         	movff	??_main+5,??_main+4
  1208  0009F6  C06B  F06A         	movff	??_main+6,??_main+5
  1209  0009FA  C06C  F06B         	movff	??_main+7,??_main+6
  1210  0009FE  0100               	movlb	0	; () banked
  1211  000A00  6B6C               	clrf	(??_main+7)& (0+255),b
  1212  000A02  0100               	movlb	0	; () banked
  1213  000A04  5169               	movf	(??_main+4)& (0+255),w,b
  1214  000A06  6EB3               	movwf	4019,c	;volatile
  1215                           
  1216                           ; BSR set to: 0
  1217                           ;light0.c: 384: TMR3L = (65535-light_interval) & 0x00ff ;
  1218  000A08  0100               	movlb	0	; () banked
  1219  000A0A  516E               	movf	_light_interval& (0+255),w,b
  1220  000A0C  0800               	sublw	0
  1221  000A0E  0100               	movlb	0	; () banked
  1222  000A10  6F65               	movwf	??_main& (0+255),b
  1223  000A12  0100               	movlb	0	; () banked
  1224  000A14  0565               	decf	??_main& (0+255),w,b
  1225  000A16  6EB2               	movwf	4018,c	;volatile
  1226                           
  1227                           ; BSR set to: 0
  1228                           ;light0.c: 385: TMR3IF = 0 ;
  1229  000A18  92A1               	bcf	4001,1,c	;volatile
  1230                           
  1231                           ; BSR set to: 0
  1232                           ;light0.c: 386: TMR3IE = 1;
  1233  000A1A  82A0               	bsf	4000,1,c	;volatile
  1234                           
  1235                           ; BSR set to: 0
  1236                           ;light0.c: 388: PEIE = 1;
  1237  000A1C  8CF2               	bsf	intcon,6,c	;volatile
  1238                           
  1239                           ; BSR set to: 0
  1240                           ;light0.c: 389: GIE = 1;
  1241  000A1E  8EF2               	bsf	intcon,7,c	;volatile
  1242                           
  1243                           ; BSR set to: 0
  1244                           ;light0.c: 391: light(0,0,0);
  1245  000A20  0E00               	movlw	0
  1246  000A22  0100               	movlb	0	; () banked
  1247  000A24  6F60               	movwf	light@h& (0+255),b
  1248  000A26  0E00               	movlw	0
  1249  000A28  0100               	movlb	0	; () banked
  1250  000A2A  6F62               	movwf	(light@l+1)& (0+255),b
  1251  000A2C  0E00               	movlw	0
  1252  000A2E  6F61               	movwf	light@l& (0+255),b
  1253  000A30  0E00               	movlw	0
  1254  000A32  ECDA  F005         	call	_light
  1255  000A36  D01A               	goto	l1386
  1256  000A38                     l1372:
  1257                           
  1258                           ;light0.c: 397: if(PORTBbits.RB4 == 1 && prev == 0){
  1259  000A38  A881               	btfss	3969,4,c	;volatile
  1260  000A3A  D012               	goto	l1382
  1261  000A3C  0100               	movlb	0	; () banked
  1262  000A3E  516D               	movf	main@prev& (0+255),w,b
  1263  000A40  0100               	movlb	0	; () banked
  1264  000A42  A4D8               	btfss	status,2,c
  1265  000A44  D00D               	goto	l1382
  1266                           
  1267                           ; BSR set to: 0
  1268                           ;light0.c: 398: count++;
  1269  000A46  4A36               	infsnz	_count,f,c
  1270  000A48  2A37               	incf	_count+1,f,c
  1271                           
  1272                           ; BSR set to: 0
  1273                           ;light0.c: 399: prev = 1;
  1274  000A4A  0E01               	movlw	1
  1275  000A4C  0100               	movlb	0	; () banked
  1276  000A4E  6F6D               	movwf	main@prev& (0+255),b
  1277                           
  1278                           ; BSR set to: 0
  1279                           ;light0.c: 400: light_point = 0;
  1280  000A50  0E00               	movlw	0
  1281  000A52  6E30               	movwf	_light_point,c
  1282  000A54  0E00               	movlw	0
  1283  000A56  6E31               	movwf	_light_point+1,c
  1284  000A58  0E00               	movlw	0
  1285  000A5A  6E32               	movwf	_light_point+2,c
  1286  000A5C  0E00               	movlw	0
  1287  000A5E  6E33               	movwf	_light_point+3,c
  1288  000A60                     l1382:
  1289                           
  1290                           ;light0.c: 401: }
  1291                           ;light0.c: 402: if(PORTBbits.RB4 == 0 && prev == 1){
  1292  000A60  B881               	btfsc	3969,4,c	;volatile
  1293  000A62  D7EA               	goto	l1372
  1294  000A64  0100               	movlb	0	; () banked
  1295  000A66  056D               	decf	main@prev& (0+255),w,b
  1296  000A68  A4D8               	btfss	status,2,c
  1297  000A6A  D7E6               	goto	l1372
  1298  000A6C                     l1386:
  1299                           
  1300                           ; BSR set to: 0
  1301                           ;light0.c: 403: prev=0;
  1302  000A6C  0E00               	movlw	0
  1303  000A6E  0100               	movlb	0	; () banked
  1304  000A70  6F6D               	movwf	main@prev& (0+255),b
  1305                           
  1306                           ; BSR set to: 0
  1307                           
  1308                           ; BSR set to: 0
  1309  000A72  D7E2               	goto	l1372
  1310  000A74                     __end_of_main:
  1311                           	opt stack 0
  1312                           tblptru	equ	0xFF8
  1313                           tblptrh	equ	0xFF7
  1314                           tblptrl	equ	0xFF6
  1315                           tablat	equ	0xFF5
  1316                           intcon	equ	0xFF2
  1317                           postinc0	equ	0xFEE
  1318                           wreg	equ	0xFE8
  1319                           postdec1	equ	0xFE5
  1320                           fsr1h	equ	0xFE2
  1321                           fsr1l	equ	0xFE1
  1322                           status	equ	0xFD8
  1323                           
  1324 ;; *************** function _light *****************
  1325 ;; Defined at:
  1326 ;;		line 345 in file "light0.c"
  1327 ;; Parameters:    Size  Location     Type
  1328 ;;  c               1    wreg     unsigned char 
  1329 ;;  h               1    0[BANK0 ] unsigned char 
  1330 ;;  l               2    1[BANK0 ] unsigned int 
  1331 ;; Auto vars:     Size  Location     Type
  1332 ;;  c               1    4[BANK0 ] unsigned char 
  1333 ;; Return value:  Size  Location     Type
  1334 ;;		None               void
  1335 ;; Registers used:
  1336 ;;		wreg, status,2, status,0
  1337 ;; Tracked objects:
  1338 ;;		On entry : 0/0
  1339 ;;		On exit  : 0/0
  1340 ;;		Unchanged: 0/0
  1341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1342 ;;      Params:         0       3       0       0       0       0       0
  1343 ;;      Locals:         0       1       0       0       0       0       0
  1344 ;;      Temps:          0       1       0       0       0       0       0
  1345 ;;      Totals:         0       5       0       0       0       0       0
  1346 ;;Total ram usage:        5 bytes
  1347 ;; Hardware stack levels used:    1
  1348 ;; Hardware stack levels required when called:    2
  1349 ;; This function calls:
  1350 ;;		Nothing
  1351 ;; This function is called by:
  1352 ;;		_main
  1353 ;; This function uses a non-reentrant model
  1354 ;;
  1355                           
  1356                           	psect	text1
  1357  000BB4                     __ptext1:
  1358                           	opt stack 0
  1359  000BB4                     _light:
  1360                           	opt stack 28
  1361                           
  1362                           ; BSR set to: 0
  1363                           ;incstack = 0
  1364                           ;light@c stored from wreg
  1365  000BB4  0100               	movlb	0	; () banked
  1366  000BB6  6F64               	movwf	light@c& (0+255),b
  1367                           
  1368                           ;light0.c: 346: LATBbits.LATB5 = (c>>0) & 1 ;
  1369  000BB8  C064  F063         	movff	light@c,??_light
  1370  000BBC  0E01               	movlw	1
  1371  000BBE  0100               	movlb	0	; () banked
  1372  000BC0  1763               	andwf	??_light& (0+255),f,b
  1373  000BC2  0100               	movlb	0	; () banked
  1374  000BC4  3B63               	swapf	??_light& (0+255),f,b
  1375  000BC6  4763               	rlncf	??_light& (0+255),f,b
  1376  000BC8  508A               	movf	3978,w,c	;volatile
  1377  000BCA  0100               	movlb	0	; () banked
  1378  000BCC  1963               	xorwf	??_light& (0+255),w,b
  1379  000BCE  0BDF               	andlw	-33
  1380  000BD0  1963               	xorwf	??_light& (0+255),w,b
  1381  000BD2  6E8A               	movwf	3978,c	;volatile
  1382                           
  1383                           ;light0.c: 347: LATBbits.LATB6 = (c>>1) & 1 ;
  1384  000BD4  C064  F063         	movff	light@c,??_light
  1385  000BD8  0100               	movlb	0	; () banked
  1386  000BDA  90D8               	bcf	status,0,c
  1387  000BDC  3363               	rrcf	??_light& (0+255),f,b
  1388  000BDE  0E01               	movlw	1
  1389  000BE0  0100               	movlb	0	; () banked
  1390  000BE2  1763               	andwf	??_light& (0+255),f,b
  1391  000BE4  0100               	movlb	0	; () banked
  1392  000BE6  3B63               	swapf	??_light& (0+255),f,b
  1393  000BE8  4763               	rlncf	??_light& (0+255),f,b
  1394  000BEA  4763               	rlncf	??_light& (0+255),f,b
  1395  000BEC  508A               	movf	3978,w,c	;volatile
  1396  000BEE  0100               	movlb	0	; () banked
  1397  000BF0  1963               	xorwf	??_light& (0+255),w,b
  1398  000BF2  0BBF               	andlw	-65
  1399  000BF4  1963               	xorwf	??_light& (0+255),w,b
  1400  000BF6  6E8A               	movwf	3978,c	;volatile
  1401                           
  1402                           ;light0.c: 348: LATBbits.LATB7 = (c>>2) & 1 ;
  1403  000BF8  C064  F063         	movff	light@c,??_light
  1404  000BFC  0100               	movlb	0	; () banked
  1405  000BFE  90D8               	bcf	status,0,c
  1406  000C00  3363               	rrcf	??_light& (0+255),f,b
  1407  000C02  0100               	movlb	0	; () banked
  1408  000C04  90D8               	bcf	status,0,c
  1409  000C06  3363               	rrcf	??_light& (0+255),f,b
  1410  000C08  0E01               	movlw	1
  1411  000C0A  0100               	movlb	0	; () banked
  1412  000C0C  1763               	andwf	??_light& (0+255),f,b
  1413  000C0E  0100               	movlb	0	; () banked
  1414  000C10  3363               	rrcf	??_light& (0+255),f,b
  1415  000C12  3363               	rrcf	??_light& (0+255),f,b
  1416  000C14  508A               	movf	3978,w,c	;volatile
  1417  000C16  0100               	movlb	0	; () banked
  1418  000C18  1963               	xorwf	??_light& (0+255),w,b
  1419  000C1A  0B7F               	andlw	-129
  1420  000C1C  1963               	xorwf	??_light& (0+255),w,b
  1421  000C1E  6E8A               	movwf	3978,c	;volatile
  1422                           
  1423                           ;light0.c: 350: LATBbits.LATB0 = (h>>0) & 1 ;
  1424  000C20  C060  F063         	movff	light@h,??_light
  1425  000C24  0E01               	movlw	1
  1426  000C26  0100               	movlb	0	; () banked
  1427  000C28  1763               	andwf	??_light& (0+255),f,b
  1428  000C2A  508A               	movf	3978,w,c	;volatile
  1429  000C2C  0100               	movlb	0	; () banked
  1430  000C2E  1963               	xorwf	??_light& (0+255),w,b
  1431  000C30  0BFE               	andlw	-2
  1432  000C32  1963               	xorwf	??_light& (0+255),w,b
  1433  000C34  6E8A               	movwf	3978,c	;volatile
  1434                           
  1435                           ;light0.c: 351: LATBbits.LATB1 = (h>>1) & 1 ;
  1436  000C36  C060  F063         	movff	light@h,??_light
  1437  000C3A  0100               	movlb	0	; () banked
  1438  000C3C  90D8               	bcf	status,0,c
  1439  000C3E  3363               	rrcf	??_light& (0+255),f,b
  1440  000C40  0E01               	movlw	1
  1441  000C42  0100               	movlb	0	; () banked
  1442  000C44  1763               	andwf	??_light& (0+255),f,b
  1443  000C46  0100               	movlb	0	; () banked
  1444  000C48  4763               	rlncf	??_light& (0+255),f,b
  1445  000C4A  508A               	movf	3978,w,c	;volatile
  1446  000C4C  0100               	movlb	0	; () banked
  1447  000C4E  1963               	xorwf	??_light& (0+255),w,b
  1448  000C50  0BFD               	andlw	-3
  1449  000C52  1963               	xorwf	??_light& (0+255),w,b
  1450  000C54  6E8A               	movwf	3978,c	;volatile
  1451                           
  1452                           ;light0.c: 352: LATBbits.LATB2 = (h>>2) & 1 ;
  1453  000C56  C060  F063         	movff	light@h,??_light
  1454  000C5A  0100               	movlb	0	; () banked
  1455  000C5C  90D8               	bcf	status,0,c
  1456  000C5E  3363               	rrcf	??_light& (0+255),f,b
  1457  000C60  0100               	movlb	0	; () banked
  1458  000C62  90D8               	bcf	status,0,c
  1459  000C64  3363               	rrcf	??_light& (0+255),f,b
  1460  000C66  0E01               	movlw	1
  1461  000C68  0100               	movlb	0	; () banked
  1462  000C6A  1763               	andwf	??_light& (0+255),f,b
  1463  000C6C  0100               	movlb	0	; () banked
  1464  000C6E  4763               	rlncf	??_light& (0+255),f,b
  1465  000C70  4763               	rlncf	??_light& (0+255),f,b
  1466  000C72  508A               	movf	3978,w,c	;volatile
  1467  000C74  0100               	movlb	0	; () banked
  1468  000C76  1963               	xorwf	??_light& (0+255),w,b
  1469  000C78  0BFB               	andlw	-5
  1470  000C7A  1963               	xorwf	??_light& (0+255),w,b
  1471  000C7C  6E8A               	movwf	3978,c	;volatile
  1472                           
  1473                           ;light0.c: 353: LATBbits.LATB3 = (h>>3) & 1 ;
  1474  000C7E  C060  F063         	movff	light@h,??_light
  1475  000C82  0100               	movlb	0	; () banked
  1476  000C84  90D8               	bcf	status,0,c
  1477  000C86  3363               	rrcf	??_light& (0+255),f,b
  1478  000C88  0100               	movlb	0	; () banked
  1479  000C8A  90D8               	bcf	status,0,c
  1480  000C8C  3363               	rrcf	??_light& (0+255),f,b
  1481  000C8E  0100               	movlb	0	; () banked
  1482  000C90  90D8               	bcf	status,0,c
  1483  000C92  3363               	rrcf	??_light& (0+255),f,b
  1484  000C94  0E01               	movlw	1
  1485  000C96  0100               	movlb	0	; () banked
  1486  000C98  1763               	andwf	??_light& (0+255),f,b
  1487  000C9A  0100               	movlb	0	; () banked
  1488  000C9C  4763               	rlncf	??_light& (0+255),f,b
  1489  000C9E  4763               	rlncf	??_light& (0+255),f,b
  1490  000CA0  4763               	rlncf	??_light& (0+255),f,b
  1491  000CA2  508A               	movf	3978,w,c	;volatile
  1492  000CA4  0100               	movlb	0	; () banked
  1493  000CA6  1963               	xorwf	??_light& (0+255),w,b
  1494  000CA8  0BF7               	andlw	-9
  1495  000CAA  1963               	xorwf	??_light& (0+255),w,b
  1496  000CAC  6E8A               	movwf	3978,c	;volatile
  1497                           
  1498                           ; BSR set to: 0
  1499                           ;light0.c: 354: LATC = l>>8;
  1500  000CAE  0100               	movlb	0	; () banked
  1501  000CB0  5162               	movf	(light@l+1)& (0+255),w,b
  1502  000CB2  6E8B               	movwf	3979,c	;volatile
  1503                           
  1504                           ; BSR set to: 0
  1505                           ;light0.c: 355: LATA = l;
  1506  000CB4  C061  FF89         	movff	light@l,3977	;volatile
  1507                           
  1508                           ; BSR set to: 0
  1509  000CB8  0012               	return		;funcret
  1510  000CBA                     __end_of_light:
  1511                           	opt stack 0
  1512                           tblptru	equ	0xFF8
  1513                           tblptrh	equ	0xFF7
  1514                           tblptrl	equ	0xFF6
  1515                           tablat	equ	0xFF5
  1516                           intcon	equ	0xFF2
  1517                           postinc0	equ	0xFEE
  1518                           wreg	equ	0xFE8
  1519                           postdec1	equ	0xFE5
  1520                           fsr1h	equ	0xFE2
  1521                           fsr1l	equ	0xFE1
  1522                           status	equ	0xFD8
  1523                           
  1524 ;; *************** function _timer *****************
  1525 ;; Defined at:
  1526 ;;		line 440 in file "light0.c"
  1527 ;; Parameters:    Size  Location     Type
  1528 ;;		None
  1529 ;; Auto vars:     Size  Location     Type
  1530 ;;  j               2   45[COMRAM] int 
  1531 ;;  i               2   43[COMRAM] int 
  1532 ;; Return value:  Size  Location     Type
  1533 ;;		None               void
  1534 ;; Registers used:
  1535 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1536 ;; Tracked objects:
  1537 ;;		On entry : 0/0
  1538 ;;		On exit  : 0/0
  1539 ;;		Unchanged: 0/0
  1540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1541 ;;      Params:         0       0       0       0       0       0       0
  1542 ;;      Locals:         4       0       0       0       0       0       0
  1543 ;;      Temps:         24       0       0       0       0       0       0
  1544 ;;      Totals:        28       0       0       0       0       0       0
  1545 ;;Total ram usage:       28 bytes
  1546 ;; Hardware stack levels used:    1
  1547 ;; Hardware stack levels required when called:    1
  1548 ;; This function calls:
  1549 ;;		___awdiv
  1550 ;;		___awmod
  1551 ;;		___lldiv
  1552 ;;		___lwmod
  1553 ;;		___wmul
  1554 ;;		_get_color
  1555 ;;		i2_light
  1556 ;; This function is called by:
  1557 ;;		Interrupt level 2
  1558 ;; This function uses a non-reentrant model
  1559 ;;
  1560                           
  1561                           	psect	intcode
  1562  000008                     __pintcode:
  1563                           	opt stack 0
  1564  000008                     _timer:
  1565                           	opt stack 28
  1566                           
  1567                           ; BSR set to: 0
  1568                           ;incstack = 0
  1569  000008  8245               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  1570  00000A  CFFA F01E          	movff	pclath,??_timer+10
  1571  00000E  CFFB F01F          	movff	pclatu,??_timer+11
  1572  000012  CFE9 F020          	movff	fsr0l,??_timer+12
  1573  000016  CFEA F021          	movff	fsr0h,??_timer+13
  1574  00001A  CFE1 F022          	movff	fsr1l,??_timer+14
  1575  00001E  CFE2 F023          	movff	fsr1h,??_timer+15
  1576  000022  CFD9 F024          	movff	fsr2l,??_timer+16
  1577  000026  CFDA F025          	movff	fsr2h,??_timer+17
  1578  00002A  CFF3 F026          	movff	prodl,??_timer+18
  1579  00002E  CFF4 F027          	movff	prodh,??_timer+19
  1580  000032  CFF6 F028          	movff	tblptrl,??_timer+20
  1581  000036  CFF7 F029          	movff	tblptrh,??_timer+21
  1582  00003A  CFF8 F02A          	movff	tblptru,??_timer+22
  1583  00003E  CFF5 F02B          	movff	tablat,??_timer+23
  1584                           
  1585                           ;light0.c: 441: if(TMR1IF){
  1586  000042  A09E               	btfss	3998,0,c	;volatile
  1587  000044  D154               	goto	i2l130
  1588                           
  1589                           ;light0.c: 442: TMR1H = 0;
  1590  000046  0E00               	movlw	0
  1591  000048  6ECF               	movwf	4047,c	;volatile
  1592                           
  1593                           ;light0.c: 443: TMR1L = 0;
  1594  00004A  0E00               	movlw	0
  1595  00004C  6ECE               	movwf	4046,c	;volatile
  1596                           
  1597                           ;light0.c: 444: TMR1IF = 0;
  1598  00004E  909E               	bcf	3998,0,c	;volatile
  1599                           
  1600                           ;light0.c: 446: eight_count++;
  1601  000050  2A39               	incf	_eight_count,f,c
  1602                           
  1603                           ;light0.c: 447: if(eight_count==8){
  1604  000052  0E08               	movlw	8
  1605  000054  1839               	xorwf	_eight_count,w,c
  1606  000056  A4D8               	btfss	status,2,c
  1607  000058  D14A               	goto	i2l130
  1608                           
  1609                           ;light0.c: 448: light_interval = count ? 65535 - (N/(count*S) + N/(count*S+S))/2 : light
      +                          _interval;
  1610  00005A  5036               	movf	_count,w,c
  1611  00005C  1037               	iorwf	_count+1,w,c
  1612  00005E  B4D8               	btfsc	status,2,c
  1613  000060  D086               	goto	i2l1404
  1614  000062  0E01               	movlw	low _N
  1615  000064  6EF6               	movwf	tblptrl,c
  1616  000066                     	if	0	;There is only one active tblptr byte
  1617  000066                     	endif
  1618  000066                     	if	0	;There are less than 3 active tblptr bytes
  1619  000066                     	endif
  1620  000066  0009               	tblrd		*+
  1621  000068  CFF5 F007          	movff	tablat,___lldiv@dividend
  1622  00006C  0009               	tblrd		*+
  1623  00006E  CFF5 F008          	movff	tablat,___lldiv@dividend+1
  1624  000072  0009               	tblrd		*+
  1625  000074  CFF5 F009          	movff	tablat,___lldiv@dividend+2
  1626  000078  000A               	tblrd		*-
  1627  00007A  CFF5 F00A          	movff	tablat,___lldiv@dividend+3
  1628  00007E  C036  F001         	movff	_count,___wmul@multiplier
  1629  000082  C037  F002         	movff	_count+1,___wmul@multiplier+1
  1630  000086  0E09               	movlw	low _S
  1631  000088  6EF6               	movwf	tblptrl,c
  1632  00008A                     	if	0	;There is only one active tblptr byte
  1633  00008A                     	endif
  1634  00008A                     	if	0	;There are less than 3 active tblptr bytes
  1635  00008A                     	endif
  1636  00008A  0009               	tblrd		*+
  1637  00008C  CFF5 F003          	movff	tablat,___wmul@multiplicand
  1638  000090  000A               	tblrd		*-
  1639  000092  CFF5 F004          	movff	tablat,___wmul@multiplicand+1
  1640  000096  ECE8  F007         	call	___wmul	;wreg free
  1641  00009A  C001  F00B         	movff	?___wmul,___lldiv@divisor
  1642  00009E  C002  F00C         	movff	?___wmul+1,___lldiv@divisor+1
  1643  0000A2  6A0D               	clrf	___lldiv@divisor+2,c
  1644  0000A4  6A0E               	clrf	___lldiv@divisor+3,c
  1645  0000A6  EC4E  F007         	call	___lldiv	;wreg free
  1646  0000AA  C007  F014         	movff	?___lldiv,??_timer
  1647  0000AE  C008  F015         	movff	?___lldiv+1,??_timer+1
  1648  0000B2  C009  F016         	movff	?___lldiv+2,??_timer+2
  1649  0000B6  C00A  F017         	movff	?___lldiv+3,??_timer+3
  1650  0000BA  0E01               	movlw	low _N
  1651  0000BC  6EF6               	movwf	tblptrl,c
  1652  0000BE                     	if	0	;There is only one active tblptr byte
  1653  0000BE                     	endif
  1654  0000BE                     	if	0	;There are less than 3 active tblptr bytes
  1655  0000BE                     	endif
  1656  0000BE  0009               	tblrd		*+
  1657  0000C0  CFF5 F007          	movff	tablat,___lldiv@dividend
  1658  0000C4  0009               	tblrd		*+
  1659  0000C6  CFF5 F008          	movff	tablat,___lldiv@dividend+1
  1660  0000CA  0009               	tblrd		*+
  1661  0000CC  CFF5 F009          	movff	tablat,___lldiv@dividend+2
  1662  0000D0  000A               	tblrd		*-
  1663  0000D2  CFF5 F00A          	movff	tablat,___lldiv@dividend+3
  1664  0000D6  0E09               	movlw	low _S
  1665  0000D8  6EF6               	movwf	tblptrl,c
  1666  0000DA                     	if	0	;There is only one active tblptr byte
  1667  0000DA                     	endif
  1668  0000DA                     	if	0	;There are less than 3 active tblptr bytes
  1669  0000DA                     	endif
  1670  0000DA  0009               	tblrd		*+
  1671  0000DC  CFF5 F018          	movff	tablat,??_timer+4
  1672  0000E0  0009               	tblrd		*+
  1673  0000E2  CFF5 F019          	movff	tablat,??_timer+5
  1674  0000E6  C036  F001         	movff	_count,___wmul@multiplier
  1675  0000EA  C037  F002         	movff	_count+1,___wmul@multiplier+1
  1676  0000EE  0E09               	movlw	low _S
  1677  0000F0  6EF6               	movwf	tblptrl,c
  1678  0000F2                     	if	0	;There is only one active tblptr byte
  1679  0000F2                     	endif
  1680  0000F2                     	if	0	;There are less than 3 active tblptr bytes
  1681  0000F2                     	endif
  1682  0000F2  0009               	tblrd		*+
  1683  0000F4  CFF5 F003          	movff	tablat,___wmul@multiplicand
  1684  0000F8  000A               	tblrd		*-
  1685  0000FA  CFF5 F004          	movff	tablat,___wmul@multiplicand+1
  1686  0000FE  ECE8  F007         	call	___wmul	;wreg free
  1687  000102  5018               	movf	??_timer+4,w,c
  1688  000104  2601               	addwf	?___wmul,f,c
  1689  000106  5019               	movf	??_timer+5,w,c
  1690  000108  2202               	addwfc	?___wmul+1,f,c
  1691  00010A  C001  F00B         	movff	?___wmul,___lldiv@divisor
  1692  00010E  C002  F00C         	movff	?___wmul+1,___lldiv@divisor+1
  1693  000112  6A0D               	clrf	___lldiv@divisor+2,c
  1694  000114  6A0E               	clrf	___lldiv@divisor+3,c
  1695  000116  EC4E  F007         	call	___lldiv	;wreg free
  1696  00011A  5007               	movf	?___lldiv,w,c
  1697  00011C  2414               	addwf	??_timer,w,c
  1698  00011E  6E1A               	movwf	(??_timer+6)& (0+255),c
  1699  000120  5008               	movf	?___lldiv+1,w,c
  1700  000122  2015               	addwfc	??_timer+1,w,c
  1701  000124  6E1B               	movwf	(??_timer+7)& (0+255),c
  1702  000126  5009               	movf	?___lldiv+2,w,c
  1703  000128  2016               	addwfc	??_timer+2,w,c
  1704  00012A  6E1C               	movwf	(??_timer+8)& (0+255),c
  1705  00012C  500A               	movf	?___lldiv+3,w,c
  1706  00012E  2017               	addwfc	??_timer+3,w,c
  1707  000130  6E1D               	movwf	(??_timer+9)& (0+255),c
  1708  000132  90D8               	bcf	status,0,c
  1709  000134  321D               	rrcf	??_timer+9,f,c
  1710  000136  321C               	rrcf	??_timer+8,f,c
  1711  000138  321B               	rrcf	??_timer+7,f,c
  1712  00013A  321A               	rrcf	??_timer+6,f,c
  1713  00013C  1E1A               	comf	??_timer+6,f,c
  1714  00013E  1E1B               	comf	??_timer+7,f,c
  1715  000140  1E1C               	comf	??_timer+8,f,c
  1716  000142  1E1D               	comf	??_timer+9,f,c
  1717  000144  2A1A               	incf	??_timer+6,f,c
  1718  000146  0E00               	movlw	0
  1719  000148  221B               	addwfc	??_timer+7,f,c
  1720  00014A  221C               	addwfc	??_timer+8,f,c
  1721  00014C  221D               	addwfc	??_timer+9,f,c
  1722  00014E  0EFF               	movlw	255
  1723  000150  241A               	addwf	??_timer+6,w,c
  1724  000152  0100               	movlb	0	; () banked
  1725  000154  6F6E               	movwf	_light_interval& (0+255),b
  1726  000156  0EFF               	movlw	255
  1727  000158  201B               	addwfc	??_timer+7,w,c
  1728  00015A  0100               	movlb	0	; () banked
  1729  00015C  6F6F               	movwf	(_light_interval+1)& (0+255),b
  1730  00015E  0E00               	movlw	0
  1731  000160  201C               	addwfc	??_timer+8,w,c
  1732  000162  0100               	movlb	0	; () banked
  1733  000164  6F70               	movwf	(_light_interval+2)& (0+255),b
  1734  000166  0E00               	movlw	0
  1735  000168  201D               	addwfc	??_timer+9,w,c
  1736  00016A  0100               	movlb	0	; () banked
  1737  00016C  6F71               	movwf	(_light_interval+3)& (0+255),b
  1738  00016E                     i2l1404:
  1739                           
  1740                           ;light0.c: 449: count = 0;
  1741  00016E  0E00               	movlw	0
  1742  000170  6E37               	movwf	_count+1,c
  1743  000172  0E00               	movlw	0
  1744  000174  6E36               	movwf	_count,c
  1745                           
  1746                           ;light0.c: 450: eight_count=0;
  1747  000176  0E00               	movlw	0
  1748  000178  6E39               	movwf	_eight_count,c
  1749                           
  1750                           ;light0.c: 451: color_count++;
  1751  00017A  4A34               	infsnz	_color_count,f,c
  1752  00017C  2A35               	incf	_color_count+1,f,c
  1753                           
  1754                           ;light0.c: 452: if(color_count > 14) time_count--;
  1755  00017E  5035               	movf	_color_count+1,w,c
  1756  000180  E104               	bnz	i2u99_40
  1757  000182  0E0F               	movlw	15
  1758  000184  5C34               	subwf	_color_count,w,c
  1759  000186  A0D8               	btfss	status,0,c
  1760  000188  D003               	goto	i2l1414
  1761  00018A                     i2u99_40:
  1762  00018A  0643               	decf	_time_count,f,c
  1763  00018C  A0D8               	btfss	status,0,c
  1764  00018E  0644               	decf	_time_count+1,f,c
  1765  000190                     i2l1414:
  1766                           
  1767                           ;light0.c: 453: if(time_count>=0){
  1768  000190  BE44               	btfsc	_time_count+1,7,c
  1769  000192  D0AD               	goto	i2l130
  1770                           
  1771                           ;light0.c: 454: min = time_count/60;
  1772  000194  C043  F001         	movff	_time_count,___awdiv@dividend
  1773  000198  C044  F002         	movff	_time_count+1,___awdiv@dividend+1
  1774  00019C  0E00               	movlw	0
  1775  00019E  6E04               	movwf	___awdiv@divisor+1,c
  1776  0001A0  0E3C               	movlw	60
  1777  0001A2  6E03               	movwf	___awdiv@divisor,c
  1778  0001A4  EC0C  F007         	call	___awdiv	;wreg free
  1779  0001A8  5001               	movf	?___awdiv,w,c
  1780  0001AA  6E3B               	movwf	_min,c
  1781                           
  1782                           ;light0.c: 455: sec = time_count%60;
  1783  0001AC  C043  F009         	movff	_time_count,___awmod@dividend
  1784  0001B0  C044  F00A         	movff	_time_count+1,___awmod@dividend+1
  1785  0001B4  0E00               	movlw	0
  1786  0001B6  6E0C               	movwf	___awmod@divisor+1,c
  1787  0001B8  0E3C               	movlw	60
  1788  0001BA  6E0B               	movwf	___awmod@divisor,c
  1789  0001BC  EC8F  F007         	call	___awmod	;wreg free
  1790  0001C0  5009               	movf	?___awmod,w,c
  1791  0001C2  6E3C               	movwf	_sec,c
  1792                           
  1793                           ;light0.c: 456: numlist[0] = min/10;
  1794  0001C4  C03B  F001         	movff	_min,___awdiv@dividend
  1795  0001C8  6A02               	clrf	___awdiv@dividend+1,c
  1796  0001CA  0E00               	movlw	0
  1797  0001CC  6E04               	movwf	___awdiv@divisor+1,c
  1798  0001CE  0E0A               	movlw	10
  1799  0001D0  6E03               	movwf	___awdiv@divisor,c
  1800  0001D2  EC0C  F007         	call	___awdiv	;wreg free
  1801  0001D6  5001               	movf	?___awdiv,w,c
  1802  0001D8  6E3E               	movwf	_numlist,c
  1803                           
  1804                           ;light0.c: 457: numlist[1] = min%10;
  1805  0001DA  C03B  F009         	movff	_min,___awmod@dividend
  1806  0001DE  6A0A               	clrf	___awmod@dividend+1,c
  1807  0001E0  0E00               	movlw	0
  1808  0001E2  6E0C               	movwf	___awmod@divisor+1,c
  1809  0001E4  0E0A               	movlw	10
  1810  0001E6  6E0B               	movwf	___awmod@divisor,c
  1811  0001E8  EC8F  F007         	call	___awmod	;wreg free
  1812  0001EC  5009               	movf	?___awmod,w,c
  1813  0001EE  6E3F               	movwf	_numlist+1,c
  1814                           
  1815                           ;light0.c: 458: numlist[3] = sec/10;
  1816  0001F0  C03C  F001         	movff	_sec,___awdiv@dividend
  1817  0001F4  6A02               	clrf	___awdiv@dividend+1,c
  1818  0001F6  0E00               	movlw	0
  1819  0001F8  6E04               	movwf	___awdiv@divisor+1,c
  1820  0001FA  0E0A               	movlw	10
  1821  0001FC  6E03               	movwf	___awdiv@divisor,c
  1822  0001FE  EC0C  F007         	call	___awdiv	;wreg free
  1823  000202  5001               	movf	?___awdiv,w,c
  1824  000204  6E41               	movwf	_numlist+3,c
  1825                           
  1826                           ;light0.c: 459: numlist[4] = sec%10;
  1827  000206  C03C  F009         	movff	_sec,___awmod@dividend
  1828  00020A  6A0A               	clrf	___awmod@dividend+1,c
  1829  00020C  0E00               	movlw	0
  1830  00020E  6E0C               	movwf	___awmod@divisor+1,c
  1831  000210  0E0A               	movlw	10
  1832  000212  6E0B               	movwf	___awmod@divisor,c
  1833  000214  EC8F  F007         	call	___awmod	;wreg free
  1834  000218  5009               	movf	?___awmod,w,c
  1835  00021A  6E42               	movwf	_numlist+4,c
  1836                           
  1837                           ;light0.c: 461: for(int i=0;i<5;i++){
  1838  00021C  0E00               	movlw	0
  1839  00021E  6E2D               	movwf	timer@i+1,c
  1840  000220  0E00               	movlw	0
  1841  000222  6E2C               	movwf	timer@i,c
  1842  000224                     i2l1420:
  1843  000224  BE2D               	btfsc	timer@i+1,7,c
  1844  000226  D006               	goto	i2l1424
  1845  000228  502D               	movf	timer@i+1,w,c
  1846  00022A  E161               	bnz	i2l130
  1847  00022C  0E05               	movlw	5
  1848  00022E  5C2C               	subwf	timer@i,w,c
  1849  000230  B0D8               	btfsc	status,0,c
  1850  000232  D05D               	goto	i2l130
  1851  000234                     i2l1424:
  1852                           
  1853                           ;light0.c: 462: for(int j=0;j<8;j++) screen[j+i*8+27] = number_font[numlist[i]].dat[j];
  1854  000234  0E00               	movlw	0
  1855  000236  6E2F               	movwf	timer@j+1,c
  1856  000238  0E00               	movlw	0
  1857  00023A  6E2E               	movwf	timer@j,c
  1858  00023C                     i2l1426:
  1859  00023C  BE2F               	btfsc	timer@j+1,7,c
  1860  00023E  D006               	goto	i2l1430
  1861  000240  502F               	movf	timer@j+1,w,c
  1862  000242  E152               	bnz	i2l1436
  1863  000244  0E08               	movlw	8
  1864  000246  5C2E               	subwf	timer@j,w,c
  1865  000248  B0D8               	btfsc	status,0,c
  1866  00024A  D04E               	goto	i2l1436
  1867  00024C                     i2l1430:
  1868  00024C  C02E  F001         	movff	timer@j,___wmul@multiplier
  1869  000250  C02F  F002         	movff	timer@j+1,___wmul@multiplier+1
  1870  000254  0E00               	movlw	0
  1871  000256  6E04               	movwf	___wmul@multiplicand+1,c
  1872  000258  0E03               	movlw	3
  1873  00025A  6E03               	movwf	___wmul@multiplicand,c
  1874  00025C  ECE8  F007         	call	___wmul	;wreg free
  1875  000260  0E3E               	movlw	low _numlist
  1876  000262  242C               	addwf	timer@i,w,c
  1877  000264  6ED9               	movwf	fsr2l,c
  1878  000266  0E00               	movlw	high _numlist
  1879  000268  202D               	addwfc	timer@i+1,w,c
  1880  00026A  6EDA               	movwf	fsr2h,c
  1881  00026C  50DF               	movf	indf2,w,c
  1882  00026E  6E14               	movwf	??_timer& (0+255),c
  1883  000270  5014               	movf	??_timer,w,c
  1884  000272  0D18               	mullw	24
  1885  000274  0E8E               	movlw	low _number_font
  1886  000276  6E15               	movwf	(??_timer+1)& (0+255),c
  1887  000278  0E02               	movlw	high _number_font
  1888  00027A  6E16               	movwf	(??_timer+2)& (0+255),c
  1889  00027C  50F3               	movf	prodl,w,c
  1890  00027E  2615               	addwf	??_timer+1,f,c
  1891  000280  50F4               	movf	prodh,w,c
  1892  000282  2216               	addwfc	??_timer+2,f,c
  1893  000284  5001               	movf	?___wmul,w,c
  1894  000286  2415               	addwf	??_timer+1,w,c
  1895  000288  6ED9               	movwf	fsr2l,c
  1896  00028A  5002               	movf	?___wmul+1,w,c
  1897  00028C  2016               	addwfc	??_timer+2,w,c
  1898  00028E  6EDA               	movwf	fsr2h,c
  1899  000290  C02C  F017         	movff	timer@i,??_timer+3
  1900  000294  C02D  F018         	movff	timer@i+1,??_timer+4
  1901  000298  90D8               	bcf	status,0,c
  1902  00029A  3617               	rlcf	??_timer+3,f,c
  1903  00029C  3618               	rlcf	??_timer+4,f,c
  1904  00029E  90D8               	bcf	status,0,c
  1905  0002A0  3617               	rlcf	??_timer+3,f,c
  1906  0002A2  3618               	rlcf	??_timer+4,f,c
  1907  0002A4  90D8               	bcf	status,0,c
  1908  0002A6  3617               	rlcf	??_timer+3,f,c
  1909  0002A8  3618               	rlcf	??_timer+4,f,c
  1910  0002AA  502E               	movf	timer@j,w,c
  1911  0002AC  2617               	addwf	??_timer+3,f,c
  1912  0002AE  502F               	movf	timer@j+1,w,c
  1913  0002B0  2218               	addwfc	??_timer+4,f,c
  1914  0002B2  0E1B               	movlw	27
  1915  0002B4  2417               	addwf	??_timer+3,w,c
  1916  0002B6  6E01               	movwf	___wmul@multiplier,c
  1917  0002B8  0E00               	movlw	0
  1918  0002BA  2018               	addwfc	??_timer+4,w,c
  1919  0002BC  6E02               	movwf	___wmul@multiplier+1,c
  1920  0002BE  0E00               	movlw	0
  1921  0002C0  6E04               	movwf	___wmul@multiplicand+1,c
  1922  0002C2  0E03               	movlw	3
  1923  0002C4  6E03               	movwf	___wmul@multiplicand,c
  1924  0002C6  ECE8  F007         	call	___wmul	;wreg free
  1925  0002CA  0E96               	movlw	low _screen
  1926  0002CC  2401               	addwf	?___wmul,w,c
  1927  0002CE  6EE1               	movwf	fsr1l,c
  1928  0002D0  0E03               	movlw	high _screen
  1929  0002D2  2002               	addwfc	?___wmul+1,w,c
  1930  0002D4  6EE2               	movwf	fsr1h,c
  1931  0002D6  CFDE FFE6          	movff	postinc2,postinc1
  1932  0002DA  CFDE FFE6          	movff	postinc2,postinc1
  1933  0002DE  CFDE FFE6          	movff	postinc2,postinc1
  1934  0002E2  4A2E               	infsnz	timer@j,f,c
  1935  0002E4  2A2F               	incf	timer@j+1,f,c
  1936  0002E6  D7AA               	goto	i2l1426
  1937  0002E8                     i2l1436:
  1938  0002E8  4A2C               	infsnz	timer@i,f,c
  1939  0002EA  2A2D               	incf	timer@i+1,f,c
  1940  0002EC  D79B               	goto	i2l1420
  1941  0002EE                     i2l130:
  1942                           
  1943                           ;light0.c: 463: }
  1944                           ;light0.c: 464: }
  1945                           ;light0.c: 465: }
  1946                           ;light0.c: 466: }
  1947                           ;light0.c: 468: static char v=0;
  1948                           ;light0.c: 469: if(TMR3IF){
  1949  0002EE  A2A1               	btfss	4001,1,c	;volatile
  1950  0002F0  D11E               	goto	i2l152
  1951                           
  1952                           ;light0.c: 470: TMR3H = light_interval >> 8;
  1953  0002F2  C06F  FFB3         	movff	_light_interval+1,4019	;volatile
  1954                           
  1955                           ;light0.c: 471: TMR3L = light_interval & 0x00ff;
  1956  0002F6  C06E  FFB2         	movff	_light_interval,4018	;volatile
  1957                           
  1958                           ;light0.c: 472: TMR3IF = 0;
  1959  0002FA  92A1               	bcf	4001,1,c	;volatile
  1960                           
  1961                           ;light0.c: 473: if(light_point<S){
  1962  0002FC  0E09               	movlw	low _S
  1963  0002FE  6EF6               	movwf	tblptrl,c
  1964  000300                     	if	0	;There is only one active tblptr byte
  1965  000300                     	endif
  1966  000300                     	if	0	;There are less than 3 active tblptr bytes
  1967  000300                     	endif
  1968  000300  0009               	tblrd		*+
  1969  000302  CFF5 F014          	movff	tablat,??_timer
  1970  000306  0009               	tblrd		*+
  1971  000308  CFF5 F015          	movff	tablat,??_timer+1
  1972  00030C  5014               	movf	??_timer,w,c
  1973  00030E  6E16               	movwf	(??_timer+2)& (0+255),c
  1974  000310  5015               	movf	??_timer+1,w,c
  1975  000312  6E17               	movwf	(??_timer+3)& (0+255),c
  1976  000314  6A18               	clrf	(??_timer+4)& (0+255),c
  1977  000316  6A19               	clrf	(??_timer+5)& (0+255),c
  1978  000318  5016               	movf	??_timer+2,w,c
  1979  00031A  5C30               	subwf	_light_point,w,c
  1980  00031C  5017               	movf	??_timer+3,w,c
  1981  00031E  5831               	subwfb	_light_point+1,w,c
  1982  000320  5018               	movf	??_timer+4,w,c
  1983  000322  5832               	subwfb	_light_point+2,w,c
  1984  000324  5019               	movf	??_timer+5,w,c
  1985  000326  5833               	subwfb	_light_point+3,w,c
  1986  000328  B0D8               	btfsc	status,0,c
  1987  00032A  D0FB               	goto	i2l1458
  1988                           
  1989                           ;light0.c: 481: if(color_count<=12) light(get_color(light_point),Youkoso[light_point].hi
      +                          gh,Youkoso[light_point].low);
  1990  00032C  5035               	movf	_color_count+1,w,c
  1991  00032E  E13B               	bnz	i2l1448
  1992  000330  0E0D               	movlw	13
  1993  000332  5C34               	subwf	_color_count,w,c
  1994  000334  B0D8               	btfsc	status,0,c
  1995  000336  D037               	goto	i2l1448
  1996  000338  C030  F001         	movff	_light_point,___wmul@multiplier
  1997  00033C  C031  F002         	movff	_light_point+1,___wmul@multiplier+1
  1998  000340  0E00               	movlw	0
  1999  000342  6E04               	movwf	___wmul@multiplicand+1,c
  2000  000344  0E03               	movlw	3
  2001  000346  6E03               	movwf	___wmul@multiplicand,c
  2002  000348  ECE8  F007         	call	___wmul	;wreg free
  2003  00034C  0E80               	movlw	low _Youkoso
  2004  00034E  2401               	addwf	?___wmul,w,c
  2005  000350  6ED9               	movwf	fsr2l,c
  2006  000352  0E01               	movlw	high _Youkoso
  2007  000354  2002               	addwfc	?___wmul+1,w,c
  2008  000356  6EDA               	movwf	fsr2h,c
  2009  000358  50DF               	movf	indf2,w,c
  2010  00035A  6E0F               	movwf	i2light@h,c
  2011  00035C  C030  F001         	movff	_light_point,___wmul@multiplier
  2012  000360  C031  F002         	movff	_light_point+1,___wmul@multiplier+1
  2013  000364  0E00               	movlw	0
  2014  000366  6E04               	movwf	___wmul@multiplicand+1,c
  2015  000368  0E03               	movlw	3
  2016  00036A  6E03               	movwf	___wmul@multiplicand,c
  2017  00036C  ECE8  F007         	call	___wmul	;wreg free
  2018  000370  0E01               	movlw	1
  2019  000372  2601               	addwf	?___wmul,f,c
  2020  000374  0E00               	movlw	0
  2021  000376  2202               	addwfc	?___wmul+1,f,c
  2022  000378  0E80               	movlw	low _Youkoso
  2023  00037A  2401               	addwf	?___wmul,w,c
  2024  00037C  6ED9               	movwf	fsr2l,c
  2025  00037E  0E01               	movlw	high _Youkoso
  2026  000380  2002               	addwfc	?___wmul+1,w,c
  2027  000382  6EDA               	movwf	fsr2h,c
  2028  000384  CFDE F010          	movff	postinc2,i2light@l
  2029  000388  CFDD F011          	movff	postdec2,i2light@l+1
  2030  00038C  C030  F001         	movff	_light_point,get_color@x
  2031  000390  C031  F002         	movff	_light_point+1,get_color@x+1
  2032  000394  C032  F003         	movff	_light_point+2,get_color@x+2
  2033  000398  C033  F004         	movff	_light_point+3,get_color@x+3
  2034  00039C  EC3A  F005         	call	_get_color	;wreg free
  2035  0003A0  EC5D  F006         	call	i2_light
  2036  0003A4  D0BE               	goto	i2l1458
  2037  0003A6                     i2l1448:
  2038                           
  2039                           ;light0.c: 482: else if(time_count>=0){
  2040  0003A6  BE44               	btfsc	_time_count+1,7,c
  2041  0003A8  D042               	goto	i2l1452
  2042                           
  2043                           ;light0.c: 483: light(time_count/10%7+1,screen[light_point].high,screen[light_point].low
      +                          );
  2044  0003AA  C030  F001         	movff	_light_point,___wmul@multiplier
  2045  0003AE  C031  F002         	movff	_light_point+1,___wmul@multiplier+1
  2046  0003B2  0E00               	movlw	0
  2047  0003B4  6E04               	movwf	___wmul@multiplicand+1,c
  2048  0003B6  0E03               	movlw	3
  2049  0003B8  6E03               	movwf	___wmul@multiplicand,c
  2050  0003BA  ECE8  F007         	call	___wmul	;wreg free
  2051  0003BE  0E96               	movlw	low _screen
  2052  0003C0  2401               	addwf	?___wmul,w,c
  2053  0003C2  6ED9               	movwf	fsr2l,c
  2054  0003C4  0E03               	movlw	high _screen
  2055  0003C6  2002               	addwfc	?___wmul+1,w,c
  2056  0003C8  6EDA               	movwf	fsr2h,c
  2057  0003CA  50DF               	movf	indf2,w,c
  2058  0003CC  6E0F               	movwf	i2light@h,c
  2059  0003CE  C030  F001         	movff	_light_point,___wmul@multiplier
  2060  0003D2  C031  F002         	movff	_light_point+1,___wmul@multiplier+1
  2061  0003D6  0E00               	movlw	0
  2062  0003D8  6E04               	movwf	___wmul@multiplicand+1,c
  2063  0003DA  0E03               	movlw	3
  2064  0003DC  6E03               	movwf	___wmul@multiplicand,c
  2065  0003DE  ECE8  F007         	call	___wmul	;wreg free
  2066  0003E2  0E01               	movlw	1
  2067  0003E4  2601               	addwf	?___wmul,f,c
  2068  0003E6  0E00               	movlw	0
  2069  0003E8  2202               	addwfc	?___wmul+1,f,c
  2070  0003EA  0E96               	movlw	low _screen
  2071  0003EC  2401               	addwf	?___wmul,w,c
  2072  0003EE  6ED9               	movwf	fsr2l,c
  2073  0003F0  0E03               	movlw	high _screen
  2074  0003F2  2002               	addwfc	?___wmul+1,w,c
  2075  0003F4  6EDA               	movwf	fsr2h,c
  2076  0003F6  CFDE F010          	movff	postinc2,i2light@l
  2077  0003FA  CFDD F011          	movff	postdec2,i2light@l+1
  2078  0003FE  0E00               	movlw	0
  2079  000400  6E04               	movwf	___awdiv@divisor+1,c
  2080  000402  0E0A               	movlw	10
  2081  000404  6E03               	movwf	___awdiv@divisor,c
  2082  000406  C043  F001         	movff	_time_count,___awdiv@dividend
  2083  00040A  C044  F002         	movff	_time_count+1,___awdiv@dividend+1
  2084  00040E  EC0C  F007         	call	___awdiv	;wreg free
  2085  000412  C001  F009         	movff	?___awdiv,___awmod@dividend
  2086  000416  C002  F00A         	movff	?___awdiv+1,___awmod@dividend+1
  2087  00041A  0E00               	movlw	0
  2088  00041C  6E0C               	movwf	___awmod@divisor+1,c
  2089  00041E  0E07               	movlw	7
  2090  000420  6E0B               	movwf	___awmod@divisor,c
  2091  000422  EC8F  F007         	call	___awmod	;wreg free
  2092  000426  2809               	incf	?___awmod,w,c
  2093  000428  EC5D  F006         	call	i2_light
  2094                           
  2095                           ;light0.c: 484: }
  2096  00042C  D07A               	goto	i2l1458
  2097  00042E                     i2l1452:
  2098                           
  2099                           ;light0.c: 485: else{
  2100                           ;light0.c: 486: if(-time_count /7 %2) light(color_count%7+1,ThankYou[light_point].high,T
      +                          hankYou[light_point].low);
  2101  00042E  C043  F001         	movff	_time_count,___awdiv@dividend
  2102  000432  C044  F002         	movff	_time_count+1,___awdiv@dividend+1
  2103  000436  0EFF               	movlw	255
  2104  000438  6E04               	movwf	___awdiv@divisor+1,c
  2105  00043A  0EF9               	movlw	249
  2106  00043C  6E03               	movwf	___awdiv@divisor,c
  2107  00043E  EC0C  F007         	call	___awdiv	;wreg free
  2108  000442  A001               	btfss	?___awdiv,0,c
  2109  000444  D038               	goto	i2l1456
  2110  000446  C030  F001         	movff	_light_point,___wmul@multiplier
  2111  00044A  C031  F002         	movff	_light_point+1,___wmul@multiplier+1
  2112  00044E  0E00               	movlw	0
  2113  000450  6E04               	movwf	___wmul@multiplicand+1,c
  2114  000452  0E03               	movlw	3
  2115  000454  6E03               	movwf	___wmul@multiplicand,c
  2116  000456  ECE8  F007         	call	___wmul	;wreg free
  2117  00045A  0E72               	movlw	low _ThankYou
  2118  00045C  2401               	addwf	?___wmul,w,c
  2119  00045E  6ED9               	movwf	fsr2l,c
  2120  000460  0E00               	movlw	high _ThankYou
  2121  000462  2002               	addwfc	?___wmul+1,w,c
  2122  000464  6EDA               	movwf	fsr2h,c
  2123  000466  50DF               	movf	indf2,w,c
  2124  000468  6E0F               	movwf	i2light@h,c
  2125  00046A  C030  F001         	movff	_light_point,___wmul@multiplier
  2126  00046E  C031  F002         	movff	_light_point+1,___wmul@multiplier+1
  2127  000472  0E00               	movlw	0
  2128  000474  6E04               	movwf	___wmul@multiplicand+1,c
  2129  000476  0E03               	movlw	3
  2130  000478  6E03               	movwf	___wmul@multiplicand,c
  2131  00047A  ECE8  F007         	call	___wmul	;wreg free
  2132  00047E  0E01               	movlw	1
  2133  000480  2601               	addwf	?___wmul,f,c
  2134  000482  0E00               	movlw	0
  2135  000484  2202               	addwfc	?___wmul+1,f,c
  2136  000486  0E72               	movlw	low _ThankYou
  2137  000488  2401               	addwf	?___wmul,w,c
  2138  00048A  6ED9               	movwf	fsr2l,c
  2139  00048C  0E00               	movlw	high _ThankYou
  2140  00048E  2002               	addwfc	?___wmul+1,w,c
  2141  000490  6EDA               	movwf	fsr2h,c
  2142  000492  CFDE F010          	movff	postinc2,i2light@l
  2143  000496  CFDD F011          	movff	postdec2,i2light@l+1
  2144  00049A  C034  F001         	movff	_color_count,___lwmod@dividend
  2145  00049E  C035  F002         	movff	_color_count+1,___lwmod@dividend+1
  2146  0004A2  0E00               	movlw	0
  2147  0004A4  6E04               	movwf	___lwmod@divisor+1,c
  2148  0004A6  0E07               	movlw	7
  2149  0004A8  6E03               	movwf	___lwmod@divisor,c
  2150  0004AA  ECC7  F007         	call	___lwmod	;wreg free
  2151  0004AE  2801               	incf	?___lwmod,w,c
  2152  0004B0  EC5D  F006         	call	i2_light
  2153  0004B4  D036               	goto	i2l1458
  2154  0004B6                     i2l1456:
  2155                           
  2156                           ;light0.c: 487: else light(get_color(light_point),Youkoso[light_point].high,Youkoso[ligh
      +                          t_point].low);
  2157  0004B6  C030  F001         	movff	_light_point,___wmul@multiplier
  2158  0004BA  C031  F002         	movff	_light_point+1,___wmul@multiplier+1
  2159  0004BE  0E00               	movlw	0
  2160  0004C0  6E04               	movwf	___wmul@multiplicand+1,c
  2161  0004C2  0E03               	movlw	3
  2162  0004C4  6E03               	movwf	___wmul@multiplicand,c
  2163  0004C6  ECE8  F007         	call	___wmul	;wreg free
  2164  0004CA  0E80               	movlw	low _Youkoso
  2165  0004CC  2401               	addwf	?___wmul,w,c
  2166  0004CE  6ED9               	movwf	fsr2l,c
  2167  0004D0  0E01               	movlw	high _Youkoso
  2168  0004D2  2002               	addwfc	?___wmul+1,w,c
  2169  0004D4  6EDA               	movwf	fsr2h,c
  2170  0004D6  50DF               	movf	indf2,w,c
  2171  0004D8  6E0F               	movwf	i2light@h,c
  2172  0004DA  C030  F001         	movff	_light_point,___wmul@multiplier
  2173  0004DE  C031  F002         	movff	_light_point+1,___wmul@multiplier+1
  2174  0004E2  0E00               	movlw	0
  2175  0004E4  6E04               	movwf	___wmul@multiplicand+1,c
  2176  0004E6  0E03               	movlw	3
  2177  0004E8  6E03               	movwf	___wmul@multiplicand,c
  2178  0004EA  ECE8  F007         	call	___wmul	;wreg free
  2179  0004EE  0E01               	movlw	1
  2180  0004F0  2601               	addwf	?___wmul,f,c
  2181  0004F2  0E00               	movlw	0
  2182  0004F4  2202               	addwfc	?___wmul+1,f,c
  2183  0004F6  0E80               	movlw	low _Youkoso
  2184  0004F8  2401               	addwf	?___wmul,w,c
  2185  0004FA  6ED9               	movwf	fsr2l,c
  2186  0004FC  0E01               	movlw	high _Youkoso
  2187  0004FE  2002               	addwfc	?___wmul+1,w,c
  2188  000500  6EDA               	movwf	fsr2h,c
  2189  000502  CFDE F010          	movff	postinc2,i2light@l
  2190  000506  CFDD F011          	movff	postdec2,i2light@l+1
  2191  00050A  C030  F001         	movff	_light_point,get_color@x
  2192  00050E  C031  F002         	movff	_light_point+1,get_color@x+1
  2193  000512  C032  F003         	movff	_light_point+2,get_color@x+2
  2194  000516  C033  F004         	movff	_light_point+3,get_color@x+3
  2195  00051A  EC3A  F005         	call	_get_color	;wreg free
  2196  00051E  EC5D  F006         	call	i2_light
  2197  000522                     i2l1458:
  2198                           
  2199                           ;light0.c: 488: }
  2200                           ;light0.c: 489: }
  2201                           ;light0.c: 491: light_point++;
  2202  000522  0E01               	movlw	1
  2203  000524  2630               	addwf	_light_point,f,c
  2204  000526  0E00               	movlw	0
  2205  000528  2231               	addwfc	_light_point+1,f,c
  2206  00052A  2232               	addwfc	_light_point+2,f,c
  2207  00052C  2233               	addwfc	_light_point+3,f,c
  2208  00052E                     i2l152:
  2209  00052E  C02B  FFF5         	movff	??_timer+23,tablat
  2210  000532  C02A  FFF8         	movff	??_timer+22,tblptru
  2211  000536  C029  FFF7         	movff	??_timer+21,tblptrh
  2212  00053A  C028  FFF6         	movff	??_timer+20,tblptrl
  2213  00053E  C027  FFF4         	movff	??_timer+19,prodh
  2214  000542  C026  FFF3         	movff	??_timer+18,prodl
  2215  000546  C025  FFDA         	movff	??_timer+17,fsr2h
  2216  00054A  C024  FFD9         	movff	??_timer+16,fsr2l
  2217  00054E  C023  FFE2         	movff	??_timer+15,fsr1h
  2218  000552  C022  FFE1         	movff	??_timer+14,fsr1l
  2219  000556  C021  FFEA         	movff	??_timer+13,fsr0h
  2220  00055A  C020  FFE9         	movff	??_timer+12,fsr0l
  2221  00055E  C01F  FFFB         	movff	??_timer+11,pclatu
  2222  000562  C01E  FFFA         	movff	??_timer+10,pclath
  2223  000566  9245               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  2224  000568  0011               	retfie		f
  2225  00056A                     __end_of_timer:
  2226                           	opt stack 0
  2227                           pclatu	equ	0xFFB
  2228                           pclath	equ	0xFFA
  2229                           tblptru	equ	0xFF8
  2230                           tblptrh	equ	0xFF7
  2231                           tblptrl	equ	0xFF6
  2232                           tablat	equ	0xFF5
  2233                           prodh	equ	0xFF4
  2234                           prodl	equ	0xFF3
  2235                           intcon	equ	0xFF2
  2236                           postinc0	equ	0xFEE
  2237                           fsr0h	equ	0xFEA
  2238                           fsr0l	equ	0xFE9
  2239                           wreg	equ	0xFE8
  2240                           postinc1	equ	0xFE6
  2241                           postdec1	equ	0xFE5
  2242                           fsr1h	equ	0xFE2
  2243                           fsr1l	equ	0xFE1
  2244                           indf2	equ	0xFDF
  2245                           postinc2	equ	0xFDE
  2246                           postdec2	equ	0xFDD
  2247                           fsr2h	equ	0xFDA
  2248                           fsr2l	equ	0xFD9
  2249                           status	equ	0xFD8
  2250                           
  2251 ;; *************** function i2_light *****************
  2252 ;; Defined at:
  2253 ;;		line 345 in file "light0.c"
  2254 ;; Parameters:    Size  Location     Type
  2255 ;;  c               1    wreg     unsigned char 
  2256 ;;  h               1   14[COMRAM] unsigned char 
  2257 ;;  l               2   15[COMRAM] unsigned int 
  2258 ;; Auto vars:     Size  Location     Type
  2259 ;;  c               1   18[COMRAM] unsigned char 
  2260 ;; Return value:  Size  Location     Type
  2261 ;;		None               void
  2262 ;; Registers used:
  2263 ;;		wreg, status,2, status,0
  2264 ;; Tracked objects:
  2265 ;;		On entry : 0/0
  2266 ;;		On exit  : 0/0
  2267 ;;		Unchanged: 0/0
  2268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2269 ;;      Params:         3       0       0       0       0       0       0
  2270 ;;      Locals:         1       0       0       0       0       0       0
  2271 ;;      Temps:          1       0       0       0       0       0       0
  2272 ;;      Totals:         5       0       0       0       0       0       0
  2273 ;;Total ram usage:        5 bytes
  2274 ;; Hardware stack levels used:    1
  2275 ;; This function calls:
  2276 ;;		Nothing
  2277 ;; This function is called by:
  2278 ;;		_timer
  2279 ;; This function uses a non-reentrant model
  2280 ;;
  2281                           
  2282                           	psect	text3
  2283  000CBA                     __ptext3:
  2284                           	opt stack 0
  2285  000CBA                     i2_light:
  2286                           	opt stack 28
  2287                           
  2288                           ;incstack = 0
  2289                           ;i2light@c stored from wreg
  2290  000CBA  6E13               	movwf	i2light@c,c
  2291                           
  2292                           ;light0.c: 346: LATBbits.LATB5 = (c>>0) & 1 ;
  2293  000CBC  C013  F012         	movff	i2light@c,??i2_light
  2294  000CC0  0E01               	movlw	1
  2295  000CC2  1612               	andwf	??i2_light,f,c
  2296  000CC4  3A12               	swapf	??i2_light,f,c
  2297  000CC6  4612               	rlncf	??i2_light,f,c
  2298  000CC8  508A               	movf	3978,w,c	;volatile
  2299  000CCA  1812               	xorwf	??i2_light,w,c
  2300  000CCC  0BDF               	andlw	-33
  2301  000CCE  1812               	xorwf	??i2_light,w,c
  2302  000CD0  6E8A               	movwf	3978,c	;volatile
  2303                           
  2304                           ;light0.c: 347: LATBbits.LATB6 = (c>>1) & 1 ;
  2305  000CD2  C013  F012         	movff	i2light@c,??i2_light
  2306  000CD6  90D8               	bcf	status,0,c
  2307  000CD8  3212               	rrcf	??i2_light,f,c
  2308  000CDA  0E01               	movlw	1
  2309  000CDC  1612               	andwf	??i2_light,f,c
  2310  000CDE  3A12               	swapf	??i2_light,f,c
  2311  000CE0  4612               	rlncf	??i2_light,f,c
  2312  000CE2  4612               	rlncf	??i2_light,f,c
  2313  000CE4  508A               	movf	3978,w,c	;volatile
  2314  000CE6  1812               	xorwf	??i2_light,w,c
  2315  000CE8  0BBF               	andlw	-65
  2316  000CEA  1812               	xorwf	??i2_light,w,c
  2317  000CEC  6E8A               	movwf	3978,c	;volatile
  2318                           
  2319                           ;light0.c: 348: LATBbits.LATB7 = (c>>2) & 1 ;
  2320  000CEE  C013  F012         	movff	i2light@c,??i2_light
  2321  000CF2  90D8               	bcf	status,0,c
  2322  000CF4  3212               	rrcf	??i2_light,f,c
  2323  000CF6  90D8               	bcf	status,0,c
  2324  000CF8  3212               	rrcf	??i2_light,f,c
  2325  000CFA  0E01               	movlw	1
  2326  000CFC  1612               	andwf	??i2_light,f,c
  2327  000CFE  3212               	rrcf	??i2_light,f,c
  2328  000D00  3212               	rrcf	??i2_light,f,c
  2329  000D02  508A               	movf	3978,w,c	;volatile
  2330  000D04  1812               	xorwf	??i2_light,w,c
  2331  000D06  0B7F               	andlw	-129
  2332  000D08  1812               	xorwf	??i2_light,w,c
  2333  000D0A  6E8A               	movwf	3978,c	;volatile
  2334                           
  2335                           ;light0.c: 350: LATBbits.LATB0 = (h>>0) & 1 ;
  2336  000D0C  C00F  F012         	movff	i2light@h,??i2_light
  2337  000D10  0E01               	movlw	1
  2338  000D12  1612               	andwf	??i2_light,f,c
  2339  000D14  508A               	movf	3978,w,c	;volatile
  2340  000D16  1812               	xorwf	??i2_light,w,c
  2341  000D18  0BFE               	andlw	-2
  2342  000D1A  1812               	xorwf	??i2_light,w,c
  2343  000D1C  6E8A               	movwf	3978,c	;volatile
  2344                           
  2345                           ;light0.c: 351: LATBbits.LATB1 = (h>>1) & 1 ;
  2346  000D1E  C00F  F012         	movff	i2light@h,??i2_light
  2347  000D22  90D8               	bcf	status,0,c
  2348  000D24  3212               	rrcf	??i2_light,f,c
  2349  000D26  0E01               	movlw	1
  2350  000D28  1612               	andwf	??i2_light,f,c
  2351  000D2A  4612               	rlncf	??i2_light,f,c
  2352  000D2C  508A               	movf	3978,w,c	;volatile
  2353  000D2E  1812               	xorwf	??i2_light,w,c
  2354  000D30  0BFD               	andlw	-3
  2355  000D32  1812               	xorwf	??i2_light,w,c
  2356  000D34  6E8A               	movwf	3978,c	;volatile
  2357                           
  2358                           ;light0.c: 352: LATBbits.LATB2 = (h>>2) & 1 ;
  2359  000D36  C00F  F012         	movff	i2light@h,??i2_light
  2360  000D3A  90D8               	bcf	status,0,c
  2361  000D3C  3212               	rrcf	??i2_light,f,c
  2362  000D3E  90D8               	bcf	status,0,c
  2363  000D40  3212               	rrcf	??i2_light,f,c
  2364  000D42  0E01               	movlw	1
  2365  000D44  1612               	andwf	??i2_light,f,c
  2366  000D46  4612               	rlncf	??i2_light,f,c
  2367  000D48  4612               	rlncf	??i2_light,f,c
  2368  000D4A  508A               	movf	3978,w,c	;volatile
  2369  000D4C  1812               	xorwf	??i2_light,w,c
  2370  000D4E  0BFB               	andlw	-5
  2371  000D50  1812               	xorwf	??i2_light,w,c
  2372  000D52  6E8A               	movwf	3978,c	;volatile
  2373                           
  2374                           ;light0.c: 353: LATBbits.LATB3 = (h>>3) & 1 ;
  2375  000D54  C00F  F012         	movff	i2light@h,??i2_light
  2376  000D58  90D8               	bcf	status,0,c
  2377  000D5A  3212               	rrcf	??i2_light,f,c
  2378  000D5C  90D8               	bcf	status,0,c
  2379  000D5E  3212               	rrcf	??i2_light,f,c
  2380  000D60  90D8               	bcf	status,0,c
  2381  000D62  3212               	rrcf	??i2_light,f,c
  2382  000D64  0E01               	movlw	1
  2383  000D66  1612               	andwf	??i2_light,f,c
  2384  000D68  4612               	rlncf	??i2_light,f,c
  2385  000D6A  4612               	rlncf	??i2_light,f,c
  2386  000D6C  4612               	rlncf	??i2_light,f,c
  2387  000D6E  508A               	movf	3978,w,c	;volatile
  2388  000D70  1812               	xorwf	??i2_light,w,c
  2389  000D72  0BF7               	andlw	-9
  2390  000D74  1812               	xorwf	??i2_light,w,c
  2391  000D76  6E8A               	movwf	3978,c	;volatile
  2392                           
  2393                           ;light0.c: 354: LATC = l>>8;
  2394  000D78  5011               	movf	i2light@l+1,w,c
  2395  000D7A  6E8B               	movwf	3979,c	;volatile
  2396                           
  2397                           ;light0.c: 355: LATA = l;
  2398  000D7C  C010  FF89         	movff	i2light@l,3977	;volatile
  2399  000D80  0012               	return		;funcret
  2400  000D82                     __end_ofi2_light:
  2401                           	opt stack 0
  2402                           pclatu	equ	0xFFB
  2403                           pclath	equ	0xFFA
  2404                           tblptru	equ	0xFF8
  2405                           tblptrh	equ	0xFF7
  2406                           tblptrl	equ	0xFF6
  2407                           tablat	equ	0xFF5
  2408                           prodh	equ	0xFF4
  2409                           prodl	equ	0xFF3
  2410                           intcon	equ	0xFF2
  2411                           postinc0	equ	0xFEE
  2412                           fsr0h	equ	0xFEA
  2413                           fsr0l	equ	0xFE9
  2414                           wreg	equ	0xFE8
  2415                           postinc1	equ	0xFE6
  2416                           postdec1	equ	0xFE5
  2417                           fsr1h	equ	0xFE2
  2418                           fsr1l	equ	0xFE1
  2419                           indf2	equ	0xFDF
  2420                           postinc2	equ	0xFDE
  2421                           postdec2	equ	0xFDD
  2422                           fsr2h	equ	0xFDA
  2423                           fsr2l	equ	0xFD9
  2424                           status	equ	0xFD8
  2425                           
  2426 ;; *************** function _get_color *****************
  2427 ;; Defined at:
  2428 ;;		line 411 in file "light0.c"
  2429 ;; Parameters:    Size  Location     Type
  2430 ;;  x               4    0[COMRAM] unsigned long 
  2431 ;; Auto vars:     Size  Location     Type
  2432 ;;		None
  2433 ;; Return value:  Size  Location     Type
  2434 ;;                  1    wreg      unsigned char 
  2435 ;; Registers used:
  2436 ;;		wreg, status,2, status,0
  2437 ;; Tracked objects:
  2438 ;;		On entry : 0/0
  2439 ;;		On exit  : 0/0
  2440 ;;		Unchanged: 0/0
  2441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2442 ;;      Params:         4       0       0       0       0       0       0
  2443 ;;      Locals:         0       0       0       0       0       0       0
  2444 ;;      Temps:          0       0       0       0       0       0       0
  2445 ;;      Totals:         4       0       0       0       0       0       0
  2446 ;;Total ram usage:        4 bytes
  2447 ;; Hardware stack levels used:    1
  2448 ;; This function calls:
  2449 ;;		Nothing
  2450 ;; This function is called by:
  2451 ;;		_timer
  2452 ;; This function uses a non-reentrant model
  2453 ;;
  2454                           
  2455                           	psect	text4
  2456  000A74                     __ptext4:
  2457                           	opt stack 0
  2458  000A74                     _get_color:
  2459                           	opt stack 28
  2460                           
  2461                           ;light0.c: 412: if(5<=x && x<=12){
  2462                           
  2463                           ;incstack = 0
  2464  000A74  5004               	movf	get_color@x+3,w,c
  2465  000A76  1003               	iorwf	get_color@x+2,w,c
  2466  000A78  1002               	iorwf	get_color@x+1,w,c
  2467  000A7A  E104               	bnz	i2u56_40
  2468  000A7C  0E05               	movlw	5
  2469  000A7E  5C01               	subwf	get_color@x,w,c
  2470  000A80  A0D8               	btfss	status,0,c
  2471  000A82  D00A               	goto	i2l1132
  2472  000A84                     i2u56_40:
  2473  000A84  5004               	movf	get_color@x+3,w,c
  2474  000A86  1003               	iorwf	get_color@x+2,w,c
  2475  000A88  1002               	iorwf	get_color@x+1,w,c
  2476  000A8A  E106               	bnz	i2l1132
  2477  000A8C  0E0D               	movlw	13
  2478  000A8E  5C01               	subwf	get_color@x,w,c
  2479  000A90  B0D8               	btfsc	status,0,c
  2480  000A92  D002               	goto	i2l1132
  2481                           
  2482                           ;light0.c: 413: return Red;
  2483  000A94  0E01               	movlw	1
  2484  000A96  0012               	return	
  2485  000A98                     i2l1132:
  2486  000A98  5004               	movf	get_color@x+3,w,c
  2487  000A9A  1003               	iorwf	get_color@x+2,w,c
  2488  000A9C  1002               	iorwf	get_color@x+1,w,c
  2489  000A9E  E104               	bnz	i2u58_40
  2490  000AA0  0E0D               	movlw	13
  2491  000AA2  5C01               	subwf	get_color@x,w,c
  2492  000AA4  A0D8               	btfss	status,0,c
  2493  000AA6  D00A               	goto	i2l1142
  2494  000AA8                     i2u58_40:
  2495  000AA8  5004               	movf	get_color@x+3,w,c
  2496  000AAA  1003               	iorwf	get_color@x+2,w,c
  2497  000AAC  1002               	iorwf	get_color@x+1,w,c
  2498  000AAE  E106               	bnz	i2l1142
  2499  000AB0  0E1B               	movlw	27
  2500  000AB2  5C01               	subwf	get_color@x,w,c
  2501  000AB4  B0D8               	btfsc	status,0,c
  2502  000AB6  D002               	goto	i2l1142
  2503  000AB8                     i2l1136:
  2504                           
  2505                           ;light0.c: 415: return Green;
  2506  000AB8  0E04               	movlw	4
  2507  000ABA  0012               	return	
  2508  000ABC                     i2l1142:
  2509  000ABC  5004               	movf	get_color@x+3,w,c
  2510  000ABE  1003               	iorwf	get_color@x+2,w,c
  2511  000AC0  1002               	iorwf	get_color@x+1,w,c
  2512  000AC2  E104               	bnz	i2u60_40
  2513  000AC4  0E1B               	movlw	27
  2514  000AC6  5C01               	subwf	get_color@x,w,c
  2515  000AC8  A0D8               	btfss	status,0,c
  2516  000ACA  D00A               	goto	i2l1152
  2517  000ACC                     i2u60_40:
  2518  000ACC  5004               	movf	get_color@x+3,w,c
  2519  000ACE  1003               	iorwf	get_color@x+2,w,c
  2520  000AD0  1002               	iorwf	get_color@x+1,w,c
  2521  000AD2  E106               	bnz	i2l1152
  2522  000AD4  0E23               	movlw	35
  2523  000AD6  5C01               	subwf	get_color@x,w,c
  2524  000AD8  B0D8               	btfsc	status,0,c
  2525  000ADA  D002               	goto	i2l1152
  2526                           
  2527                           ;light0.c: 417: return Blue;
  2528  000ADC  0E02               	movlw	2
  2529  000ADE  0012               	return	
  2530  000AE0                     i2l1152:
  2531  000AE0  5004               	movf	get_color@x+3,w,c
  2532  000AE2  1003               	iorwf	get_color@x+2,w,c
  2533  000AE4  1002               	iorwf	get_color@x+1,w,c
  2534  000AE6  E104               	bnz	i2u62_40
  2535  000AE8  0E24               	movlw	36
  2536  000AEA  5C01               	subwf	get_color@x,w,c
  2537  000AEC  A0D8               	btfss	status,0,c
  2538  000AEE  D00A               	goto	i2l1162
  2539  000AF0                     i2u62_40:
  2540  000AF0  5004               	movf	get_color@x+3,w,c
  2541  000AF2  1003               	iorwf	get_color@x+2,w,c
  2542  000AF4  1002               	iorwf	get_color@x+1,w,c
  2543  000AF6  E106               	bnz	i2l1162
  2544  000AF8  0E2B               	movlw	43
  2545  000AFA  5C01               	subwf	get_color@x,w,c
  2546  000AFC  B0D8               	btfsc	status,0,c
  2547  000AFE  D002               	goto	i2l1162
  2548  000B00                     i2l1156:
  2549                           
  2550                           ;light0.c: 419: return Yellow;
  2551  000B00  0E05               	movlw	5
  2552  000B02  0012               	return	
  2553  000B04                     i2l1162:
  2554  000B04  5004               	movf	get_color@x+3,w,c
  2555  000B06  1003               	iorwf	get_color@x+2,w,c
  2556  000B08  1002               	iorwf	get_color@x+1,w,c
  2557  000B0A  E104               	bnz	i2u64_40
  2558  000B0C  0E2C               	movlw	44
  2559  000B0E  5C01               	subwf	get_color@x,w,c
  2560  000B10  A0D8               	btfss	status,0,c
  2561  000B12  D00A               	goto	i2l1172
  2562  000B14                     i2u64_40:
  2563  000B14  5004               	movf	get_color@x+3,w,c
  2564  000B16  1003               	iorwf	get_color@x+2,w,c
  2565  000B18  1002               	iorwf	get_color@x+1,w,c
  2566  000B1A  E106               	bnz	i2l1172
  2567  000B1C  0E34               	movlw	52
  2568  000B1E  5C01               	subwf	get_color@x,w,c
  2569  000B20  B0D8               	btfsc	status,0,c
  2570  000B22  D002               	goto	i2l1172
  2571                           
  2572                           ;light0.c: 421: return Purple;
  2573  000B24  0E03               	movlw	3
  2574  000B26  0012               	return	
  2575  000B28                     i2l1172:
  2576  000B28  5004               	movf	get_color@x+3,w,c
  2577  000B2A  1003               	iorwf	get_color@x+2,w,c
  2578  000B2C  1002               	iorwf	get_color@x+1,w,c
  2579  000B2E  E104               	bnz	i2u66_40
  2580  000B30  0E34               	movlw	52
  2581  000B32  5C01               	subwf	get_color@x,w,c
  2582  000B34  A0D8               	btfss	status,0,c
  2583  000B36  D00A               	goto	i2l1182
  2584  000B38                     i2u66_40:
  2585  000B38  5004               	movf	get_color@x+3,w,c
  2586  000B3A  1003               	iorwf	get_color@x+2,w,c
  2587  000B3C  1002               	iorwf	get_color@x+1,w,c
  2588  000B3E  E106               	bnz	i2l1182
  2589  000B40  0E3B               	movlw	59
  2590  000B42  5C01               	subwf	get_color@x,w,c
  2591  000B44  B0D8               	btfsc	status,0,c
  2592  000B46  D002               	goto	i2l1182
  2593                           
  2594                           ;light0.c: 423: return Aqua;
  2595  000B48  0E06               	movlw	6
  2596  000B4A  0012               	return	
  2597  000B4C                     i2l1182:
  2598  000B4C  5004               	movf	get_color@x+3,w,c
  2599  000B4E  1003               	iorwf	get_color@x+2,w,c
  2600  000B50  1002               	iorwf	get_color@x+1,w,c
  2601  000B52  E104               	bnz	i2u68_40
  2602  000B54  0E3B               	movlw	59
  2603  000B56  5C01               	subwf	get_color@x,w,c
  2604  000B58  A0D8               	btfss	status,0,c
  2605  000B5A  D00A               	goto	i2l1192
  2606  000B5C                     i2u68_40:
  2607  000B5C  5004               	movf	get_color@x+3,w,c
  2608  000B5E  1003               	iorwf	get_color@x+2,w,c
  2609  000B60  1002               	iorwf	get_color@x+1,w,c
  2610  000B62  E106               	bnz	i2l1192
  2611  000B64  0E43               	movlw	67
  2612  000B66  5C01               	subwf	get_color@x,w,c
  2613  000B68  B0D8               	btfsc	status,0,c
  2614  000B6A  D002               	goto	i2l1192
  2615                           
  2616                           ;light0.c: 425: return White;
  2617  000B6C  0E07               	movlw	7
  2618  000B6E  0012               	return	
  2619  000B70                     i2l1192:
  2620  000B70  5004               	movf	get_color@x+3,w,c
  2621  000B72  1003               	iorwf	get_color@x+2,w,c
  2622  000B74  1002               	iorwf	get_color@x+1,w,c
  2623  000B76  E104               	bnz	i2u70_40
  2624  000B78  0E44               	movlw	68
  2625  000B7A  5C01               	subwf	get_color@x,w,c
  2626  000B7C  A0D8               	btfss	status,0,c
  2627  000B7E  D008               	goto	i2l1202
  2628  000B80                     i2u70_40:
  2629  000B80  5004               	movf	get_color@x+3,w,c
  2630  000B82  1003               	iorwf	get_color@x+2,w,c
  2631  000B84  1002               	iorwf	get_color@x+1,w,c
  2632  000B86  E104               	bnz	i2l1202
  2633  000B88  0E4B               	movlw	75
  2634  000B8A  5C01               	subwf	get_color@x,w,c
  2635  000B8C  A0D8               	btfss	status,0,c
  2636  000B8E  D794               	goto	i2l1136
  2637  000B90                     i2l1202:
  2638  000B90  5004               	movf	get_color@x+3,w,c
  2639  000B92  1003               	iorwf	get_color@x+2,w,c
  2640  000B94  1002               	iorwf	get_color@x+1,w,c
  2641  000B96  E104               	bnz	i2u72_40
  2642  000B98  0E4C               	movlw	76
  2643  000B9A  5C01               	subwf	get_color@x,w,c
  2644  000B9C  A0D8               	btfss	status,0,c
  2645  000B9E  D008               	goto	i2l1210
  2646  000BA0                     i2u72_40:
  2647  000BA0  5004               	movf	get_color@x+3,w,c
  2648  000BA2  1003               	iorwf	get_color@x+2,w,c
  2649  000BA4  1002               	iorwf	get_color@x+1,w,c
  2650  000BA6  E104               	bnz	i2l1210
  2651  000BA8  0E54               	movlw	84
  2652  000BAA  5C01               	subwf	get_color@x,w,c
  2653  000BAC  A0D8               	btfss	status,0,c
  2654  000BAE  D7A8               	goto	i2l1156
  2655  000BB0                     i2l1210:
  2656                           
  2657                           ;light0.c: 430: }
  2658                           ;light0.c: 432: return Off;
  2659  000BB0  0E00               	movlw	0
  2660  000BB2  0012               	return	
  2661  000BB4                     __end_of_get_color:
  2662                           	opt stack 0
  2663                           pclatu	equ	0xFFB
  2664                           pclath	equ	0xFFA
  2665                           tblptru	equ	0xFF8
  2666                           tblptrh	equ	0xFF7
  2667                           tblptrl	equ	0xFF6
  2668                           tablat	equ	0xFF5
  2669                           prodh	equ	0xFF4
  2670                           prodl	equ	0xFF3
  2671                           intcon	equ	0xFF2
  2672                           postinc0	equ	0xFEE
  2673                           fsr0h	equ	0xFEA
  2674                           fsr0l	equ	0xFE9
  2675                           wreg	equ	0xFE8
  2676                           postinc1	equ	0xFE6
  2677                           postdec1	equ	0xFE5
  2678                           fsr1h	equ	0xFE2
  2679                           fsr1l	equ	0xFE1
  2680                           indf2	equ	0xFDF
  2681                           postinc2	equ	0xFDE
  2682                           postdec2	equ	0xFDD
  2683                           fsr2h	equ	0xFDA
  2684                           fsr2l	equ	0xFD9
  2685                           status	equ	0xFD8
  2686                           
  2687 ;; *************** function ___wmul *****************
  2688 ;; Defined at:
  2689 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
  2690 ;; Parameters:    Size  Location     Type
  2691 ;;  multiplier      2    0[COMRAM] unsigned int 
  2692 ;;  multiplicand    2    2[COMRAM] unsigned int 
  2693 ;; Auto vars:     Size  Location     Type
  2694 ;;  product         2    4[COMRAM] unsigned int 
  2695 ;; Return value:  Size  Location     Type
  2696 ;;                  2    0[COMRAM] unsigned int 
  2697 ;; Registers used:
  2698 ;;		wreg, status,2, status,0, prodl, prodh
  2699 ;; Tracked objects:
  2700 ;;		On entry : 0/0
  2701 ;;		On exit  : 0/0
  2702 ;;		Unchanged: 0/0
  2703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2704 ;;      Params:         4       0       0       0       0       0       0
  2705 ;;      Locals:         2       0       0       0       0       0       0
  2706 ;;      Temps:          0       0       0       0       0       0       0
  2707 ;;      Totals:         6       0       0       0       0       0       0
  2708 ;;Total ram usage:        6 bytes
  2709 ;; Hardware stack levels used:    1
  2710 ;; This function calls:
  2711 ;;		Nothing
  2712 ;; This function is called by:
  2713 ;;		_timer
  2714 ;; This function uses a non-reentrant model
  2715 ;;
  2716                           
  2717                           	psect	text5
  2718  000FD0                     __ptext5:
  2719                           	opt stack 0
  2720  000FD0                     ___wmul:
  2721                           	opt stack 28
  2722                           
  2723                           ;incstack = 0
  2724  000FD0  5001               	movf	___wmul@multiplier,w,c
  2725  000FD2  0203               	mulwf	___wmul@multiplicand,c
  2726  000FD4  CFF3 F005          	movff	prodl,___wmul@product
  2727  000FD8  CFF4 F006          	movff	prodh,___wmul@product+1
  2728  000FDC  5001               	movf	___wmul@multiplier,w,c
  2729  000FDE  0204               	mulwf	___wmul@multiplicand+1,c
  2730  000FE0  50F3               	movf	prodl,w,c
  2731  000FE2  2606               	addwf	___wmul@product+1,f,c
  2732  000FE4  5002               	movf	___wmul@multiplier+1,w,c
  2733  000FE6  0203               	mulwf	___wmul@multiplicand,c
  2734  000FE8  50F3               	movf	prodl,w,c
  2735  000FEA  2606               	addwf	___wmul@product+1,f,c
  2736  000FEC  C005  F001         	movff	___wmul@product,?___wmul
  2737  000FF0  C006  F002         	movff	___wmul@product+1,?___wmul+1
  2738  000FF4  0012               	return	
  2739  000FF6                     __end_of___wmul:
  2740                           	opt stack 0
  2741                           pclatu	equ	0xFFB
  2742                           pclath	equ	0xFFA
  2743                           tblptru	equ	0xFF8
  2744                           tblptrh	equ	0xFF7
  2745                           tblptrl	equ	0xFF6
  2746                           tablat	equ	0xFF5
  2747                           prodh	equ	0xFF4
  2748                           prodl	equ	0xFF3
  2749                           intcon	equ	0xFF2
  2750                           postinc0	equ	0xFEE
  2751                           fsr0h	equ	0xFEA
  2752                           fsr0l	equ	0xFE9
  2753                           wreg	equ	0xFE8
  2754                           postinc1	equ	0xFE6
  2755                           postdec1	equ	0xFE5
  2756                           fsr1h	equ	0xFE2
  2757                           fsr1l	equ	0xFE1
  2758                           indf2	equ	0xFDF
  2759                           postinc2	equ	0xFDE
  2760                           postdec2	equ	0xFDD
  2761                           fsr2h	equ	0xFDA
  2762                           fsr2l	equ	0xFD9
  2763                           status	equ	0xFD8
  2764                           
  2765 ;; *************** function ___lwmod *****************
  2766 ;; Defined at:
  2767 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwmod.c"
  2768 ;; Parameters:    Size  Location     Type
  2769 ;;  dividend        2    0[COMRAM] unsigned int 
  2770 ;;  divisor         2    2[COMRAM] unsigned int 
  2771 ;; Auto vars:     Size  Location     Type
  2772 ;;  counter         1    4[COMRAM] unsigned char 
  2773 ;; Return value:  Size  Location     Type
  2774 ;;                  2    0[COMRAM] unsigned int 
  2775 ;; Registers used:
  2776 ;;		wreg, status,2, status,0
  2777 ;; Tracked objects:
  2778 ;;		On entry : 0/0
  2779 ;;		On exit  : 0/0
  2780 ;;		Unchanged: 0/0
  2781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2782 ;;      Params:         4       0       0       0       0       0       0
  2783 ;;      Locals:         1       0       0       0       0       0       0
  2784 ;;      Temps:          0       0       0       0       0       0       0
  2785 ;;      Totals:         5       0       0       0       0       0       0
  2786 ;;Total ram usage:        5 bytes
  2787 ;; Hardware stack levels used:    1
  2788 ;; This function calls:
  2789 ;;		Nothing
  2790 ;; This function is called by:
  2791 ;;		_timer
  2792 ;; This function uses a non-reentrant model
  2793 ;;
  2794                           
  2795                           	psect	text6
  2796  000F8E                     __ptext6:
  2797                           	opt stack 0
  2798  000F8E                     ___lwmod:
  2799                           	opt stack 28
  2800                           
  2801                           ;incstack = 0
  2802  000F8E  5003               	movf	___lwmod@divisor,w,c
  2803  000F90  1004               	iorwf	___lwmod@divisor+1,w,c
  2804  000F92  B4D8               	btfsc	status,2,c
  2805  000F94  D018               	goto	i2l565
  2806  000F96  0E01               	movlw	1
  2807  000F98  6E05               	movwf	___lwmod@counter,c
  2808  000F9A  D004               	goto	i2l1328
  2809  000F9C                     i2l1326:
  2810  000F9C  90D8               	bcf	status,0,c
  2811  000F9E  3603               	rlcf	___lwmod@divisor,f,c
  2812  000FA0  3604               	rlcf	___lwmod@divisor+1,f,c
  2813  000FA2  2A05               	incf	___lwmod@counter,f,c
  2814  000FA4                     i2l1328:
  2815  000FA4  AE04               	btfss	___lwmod@divisor+1,7,c
  2816  000FA6  D7FA               	goto	i2l1326
  2817  000FA8                     i2l1330:
  2818  000FA8  5003               	movf	___lwmod@divisor,w,c
  2819  000FAA  5C01               	subwf	___lwmod@dividend,w,c
  2820  000FAC  5004               	movf	___lwmod@divisor+1,w,c
  2821  000FAE  5802               	subwfb	___lwmod@dividend+1,w,c
  2822  000FB0  A0D8               	btfss	status,0,c
  2823  000FB2  D004               	goto	i2l1334
  2824  000FB4  5003               	movf	___lwmod@divisor,w,c
  2825  000FB6  5E01               	subwf	___lwmod@dividend,f,c
  2826  000FB8  5004               	movf	___lwmod@divisor+1,w,c
  2827  000FBA  5A02               	subwfb	___lwmod@dividend+1,f,c
  2828  000FBC                     i2l1334:
  2829  000FBC  90D8               	bcf	status,0,c
  2830  000FBE  3204               	rrcf	___lwmod@divisor+1,f,c
  2831  000FC0  3203               	rrcf	___lwmod@divisor,f,c
  2832  000FC2  2E05               	decfsz	___lwmod@counter,f,c
  2833  000FC4  D7F1               	goto	i2l1330
  2834  000FC6                     i2l565:
  2835  000FC6  C001  F001         	movff	___lwmod@dividend,?___lwmod
  2836  000FCA  C002  F002         	movff	___lwmod@dividend+1,?___lwmod+1
  2837  000FCE  0012               	return		;funcret
  2838  000FD0                     __end_of___lwmod:
  2839                           	opt stack 0
  2840                           pclatu	equ	0xFFB
  2841                           pclath	equ	0xFFA
  2842                           tblptru	equ	0xFF8
  2843                           tblptrh	equ	0xFF7
  2844                           tblptrl	equ	0xFF6
  2845                           tablat	equ	0xFF5
  2846                           prodh	equ	0xFF4
  2847                           prodl	equ	0xFF3
  2848                           intcon	equ	0xFF2
  2849                           postinc0	equ	0xFEE
  2850                           fsr0h	equ	0xFEA
  2851                           fsr0l	equ	0xFE9
  2852                           wreg	equ	0xFE8
  2853                           postinc1	equ	0xFE6
  2854                           postdec1	equ	0xFE5
  2855                           fsr1h	equ	0xFE2
  2856                           fsr1l	equ	0xFE1
  2857                           indf2	equ	0xFDF
  2858                           postinc2	equ	0xFDE
  2859                           postdec2	equ	0xFDD
  2860                           fsr2h	equ	0xFDA
  2861                           fsr2l	equ	0xFD9
  2862                           status	equ	0xFD8
  2863                           
  2864 ;; *************** function ___lldiv *****************
  2865 ;; Defined at:
  2866 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lldiv.c"
  2867 ;; Parameters:    Size  Location     Type
  2868 ;;  dividend        4    6[COMRAM] unsigned long 
  2869 ;;  divisor         4   10[COMRAM] unsigned long 
  2870 ;; Auto vars:     Size  Location     Type
  2871 ;;  quotient        4   14[COMRAM] unsigned long 
  2872 ;;  counter         1   18[COMRAM] unsigned char 
  2873 ;; Return value:  Size  Location     Type
  2874 ;;                  4    6[COMRAM] unsigned long 
  2875 ;; Registers used:
  2876 ;;		wreg, status,2, status,0
  2877 ;; Tracked objects:
  2878 ;;		On entry : 0/0
  2879 ;;		On exit  : 0/0
  2880 ;;		Unchanged: 0/0
  2881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2882 ;;      Params:         8       0       0       0       0       0       0
  2883 ;;      Locals:         5       0       0       0       0       0       0
  2884 ;;      Temps:          0       0       0       0       0       0       0
  2885 ;;      Totals:        13       0       0       0       0       0       0
  2886 ;;Total ram usage:       13 bytes
  2887 ;; Hardware stack levels used:    1
  2888 ;; This function calls:
  2889 ;;		Nothing
  2890 ;; This function is called by:
  2891 ;;		_timer
  2892 ;; This function uses a non-reentrant model
  2893 ;;
  2894                           
  2895                           	psect	text7
  2896  000E9C                     __ptext7:
  2897                           	opt stack 0
  2898  000E9C                     ___lldiv:
  2899                           	opt stack 28
  2900                           
  2901                           ;incstack = 0
  2902  000E9C  0E00               	movlw	0
  2903  000E9E  6E0F               	movwf	___lldiv@quotient,c
  2904  000EA0  0E00               	movlw	0
  2905  000EA2  6E10               	movwf	___lldiv@quotient+1,c
  2906  000EA4  0E00               	movlw	0
  2907  000EA6  6E11               	movwf	___lldiv@quotient+2,c
  2908  000EA8  0E00               	movlw	0
  2909  000EAA  6E12               	movwf	___lldiv@quotient+3,c
  2910  000EAC  500B               	movf	___lldiv@divisor,w,c
  2911  000EAE  100C               	iorwf	___lldiv@divisor+1,w,c
  2912  000EB0  100D               	iorwf	___lldiv@divisor+2,w,c
  2913  000EB2  100E               	iorwf	___lldiv@divisor+3,w,c
  2914  000EB4  B4D8               	btfsc	status,2,c
  2915  000EB6  D02A               	goto	i2l502
  2916  000EB8  0E01               	movlw	1
  2917  000EBA  6E13               	movwf	___lldiv@counter,c
  2918  000EBC  D006               	goto	i2l1308
  2919  000EBE                     i2l1306:
  2920  000EBE  90D8               	bcf	status,0,c
  2921  000EC0  360B               	rlcf	___lldiv@divisor,f,c
  2922  000EC2  360C               	rlcf	___lldiv@divisor+1,f,c
  2923  000EC4  360D               	rlcf	___lldiv@divisor+2,f,c
  2924  000EC6  360E               	rlcf	___lldiv@divisor+3,f,c
  2925  000EC8  2A13               	incf	___lldiv@counter,f,c
  2926  000ECA                     i2l1308:
  2927  000ECA  AE0E               	btfss	___lldiv@divisor+3,7,c
  2928  000ECC  D7F8               	goto	i2l1306
  2929  000ECE                     i2l1310:
  2930  000ECE  90D8               	bcf	status,0,c
  2931  000ED0  360F               	rlcf	___lldiv@quotient,f,c
  2932  000ED2  3610               	rlcf	___lldiv@quotient+1,f,c
  2933  000ED4  3611               	rlcf	___lldiv@quotient+2,f,c
  2934  000ED6  3612               	rlcf	___lldiv@quotient+3,f,c
  2935  000ED8  500B               	movf	___lldiv@divisor,w,c
  2936  000EDA  5C07               	subwf	___lldiv@dividend,w,c
  2937  000EDC  500C               	movf	___lldiv@divisor+1,w,c
  2938  000EDE  5808               	subwfb	___lldiv@dividend+1,w,c
  2939  000EE0  500D               	movf	___lldiv@divisor+2,w,c
  2940  000EE2  5809               	subwfb	___lldiv@dividend+2,w,c
  2941  000EE4  500E               	movf	___lldiv@divisor+3,w,c
  2942  000EE6  580A               	subwfb	___lldiv@dividend+3,w,c
  2943  000EE8  A0D8               	btfss	status,0,c
  2944  000EEA  D009               	goto	i2l1318
  2945  000EEC  500B               	movf	___lldiv@divisor,w,c
  2946  000EEE  5E07               	subwf	___lldiv@dividend,f,c
  2947  000EF0  500C               	movf	___lldiv@divisor+1,w,c
  2948  000EF2  5A08               	subwfb	___lldiv@dividend+1,f,c
  2949  000EF4  500D               	movf	___lldiv@divisor+2,w,c
  2950  000EF6  5A09               	subwfb	___lldiv@dividend+2,f,c
  2951  000EF8  500E               	movf	___lldiv@divisor+3,w,c
  2952  000EFA  5A0A               	subwfb	___lldiv@dividend+3,f,c
  2953  000EFC  800F               	bsf	___lldiv@quotient,0,c
  2954  000EFE                     i2l1318:
  2955  000EFE  90D8               	bcf	status,0,c
  2956  000F00  320E               	rrcf	___lldiv@divisor+3,f,c
  2957  000F02  320D               	rrcf	___lldiv@divisor+2,f,c
  2958  000F04  320C               	rrcf	___lldiv@divisor+1,f,c
  2959  000F06  320B               	rrcf	___lldiv@divisor,f,c
  2960  000F08  2E13               	decfsz	___lldiv@counter,f,c
  2961  000F0A  D7E1               	goto	i2l1310
  2962  000F0C                     i2l502:
  2963  000F0C  C00F  F007         	movff	___lldiv@quotient,?___lldiv
  2964  000F10  C010  F008         	movff	___lldiv@quotient+1,?___lldiv+1
  2965  000F14  C011  F009         	movff	___lldiv@quotient+2,?___lldiv+2
  2966  000F18  C012  F00A         	movff	___lldiv@quotient+3,?___lldiv+3
  2967  000F1C  0012               	return		;funcret
  2968  000F1E                     __end_of___lldiv:
  2969                           	opt stack 0
  2970                           pclatu	equ	0xFFB
  2971                           pclath	equ	0xFFA
  2972                           tblptru	equ	0xFF8
  2973                           tblptrh	equ	0xFF7
  2974                           tblptrl	equ	0xFF6
  2975                           tablat	equ	0xFF5
  2976                           prodh	equ	0xFF4
  2977                           prodl	equ	0xFF3
  2978                           intcon	equ	0xFF2
  2979                           postinc0	equ	0xFEE
  2980                           fsr0h	equ	0xFEA
  2981                           fsr0l	equ	0xFE9
  2982                           wreg	equ	0xFE8
  2983                           postinc1	equ	0xFE6
  2984                           postdec1	equ	0xFE5
  2985                           fsr1h	equ	0xFE2
  2986                           fsr1l	equ	0xFE1
  2987                           indf2	equ	0xFDF
  2988                           postinc2	equ	0xFDE
  2989                           postdec2	equ	0xFDD
  2990                           fsr2h	equ	0xFDA
  2991                           fsr2l	equ	0xFD9
  2992                           status	equ	0xFD8
  2993                           
  2994 ;; *************** function ___awmod *****************
  2995 ;; Defined at:
  2996 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awmod.c"
  2997 ;; Parameters:    Size  Location     Type
  2998 ;;  dividend        2    8[COMRAM] int 
  2999 ;;  divisor         2   10[COMRAM] int 
  3000 ;; Auto vars:     Size  Location     Type
  3001 ;;  sign            1   13[COMRAM] unsigned char 
  3002 ;;  counter         1   12[COMRAM] unsigned char 
  3003 ;; Return value:  Size  Location     Type
  3004 ;;                  2    8[COMRAM] int 
  3005 ;; Registers used:
  3006 ;;		wreg, status,2, status,0
  3007 ;; Tracked objects:
  3008 ;;		On entry : 0/0
  3009 ;;		On exit  : 0/0
  3010 ;;		Unchanged: 0/0
  3011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3012 ;;      Params:         4       0       0       0       0       0       0
  3013 ;;      Locals:         2       0       0       0       0       0       0
  3014 ;;      Temps:          0       0       0       0       0       0       0
  3015 ;;      Totals:         6       0       0       0       0       0       0
  3016 ;;Total ram usage:        6 bytes
  3017 ;; Hardware stack levels used:    1
  3018 ;; This function calls:
  3019 ;;		Nothing
  3020 ;; This function is called by:
  3021 ;;		_timer
  3022 ;; This function uses a non-reentrant model
  3023 ;;
  3024                           
  3025                           	psect	text8
  3026  000F1E                     __ptext8:
  3027                           	opt stack 0
  3028  000F1E                     ___awmod:
  3029                           	opt stack 28
  3030                           
  3031                           ;incstack = 0
  3032  000F1E  0E00               	movlw	0
  3033  000F20  6E0E               	movwf	___awmod@sign,c
  3034  000F22  AE0A               	btfss	___awmod@dividend+1,7,c
  3035  000F24  D006               	goto	i2l1272
  3036  000F26  6C09               	negf	___awmod@dividend,c
  3037  000F28  1E0A               	comf	___awmod@dividend+1,f,c
  3038  000F2A  B0D8               	btfsc	status,0,c
  3039  000F2C  2A0A               	incf	___awmod@dividend+1,f,c
  3040  000F2E  0E01               	movlw	1
  3041  000F30  6E0E               	movwf	___awmod@sign,c
  3042  000F32                     i2l1272:
  3043  000F32  AE0C               	btfss	___awmod@divisor+1,7,c
  3044  000F34  D004               	goto	i2l1276
  3045  000F36  6C0B               	negf	___awmod@divisor,c
  3046  000F38  1E0C               	comf	___awmod@divisor+1,f,c
  3047  000F3A  B0D8               	btfsc	status,0,c
  3048  000F3C  2A0C               	incf	___awmod@divisor+1,f,c
  3049  000F3E                     i2l1276:
  3050  000F3E  500B               	movf	___awmod@divisor,w,c
  3051  000F40  100C               	iorwf	___awmod@divisor+1,w,c
  3052  000F42  B4D8               	btfsc	status,2,c
  3053  000F44  D018               	goto	i2l1292
  3054  000F46  0E01               	movlw	1
  3055  000F48  6E0D               	movwf	___awmod@counter,c
  3056  000F4A  D004               	goto	i2l1282
  3057  000F4C                     i2l1280:
  3058  000F4C  90D8               	bcf	status,0,c
  3059  000F4E  360B               	rlcf	___awmod@divisor,f,c
  3060  000F50  360C               	rlcf	___awmod@divisor+1,f,c
  3061  000F52  2A0D               	incf	___awmod@counter,f,c
  3062  000F54                     i2l1282:
  3063  000F54  AE0C               	btfss	___awmod@divisor+1,7,c
  3064  000F56  D7FA               	goto	i2l1280
  3065  000F58                     i2l1284:
  3066  000F58  500B               	movf	___awmod@divisor,w,c
  3067  000F5A  5C09               	subwf	___awmod@dividend,w,c
  3068  000F5C  500C               	movf	___awmod@divisor+1,w,c
  3069  000F5E  580A               	subwfb	___awmod@dividend+1,w,c
  3070  000F60  A0D8               	btfss	status,0,c
  3071  000F62  D004               	goto	i2l1288
  3072  000F64  500B               	movf	___awmod@divisor,w,c
  3073  000F66  5E09               	subwf	___awmod@dividend,f,c
  3074  000F68  500C               	movf	___awmod@divisor+1,w,c
  3075  000F6A  5A0A               	subwfb	___awmod@dividend+1,f,c
  3076  000F6C                     i2l1288:
  3077  000F6C  90D8               	bcf	status,0,c
  3078  000F6E  320C               	rrcf	___awmod@divisor+1,f,c
  3079  000F70  320B               	rrcf	___awmod@divisor,f,c
  3080  000F72  2E0D               	decfsz	___awmod@counter,f,c
  3081  000F74  D7F1               	goto	i2l1284
  3082  000F76                     i2l1292:
  3083  000F76  500E               	movf	___awmod@sign,w,c
  3084  000F78  B4D8               	btfsc	status,2,c
  3085  000F7A  D004               	goto	i2l1296
  3086  000F7C  6C09               	negf	___awmod@dividend,c
  3087  000F7E  1E0A               	comf	___awmod@dividend+1,f,c
  3088  000F80  B0D8               	btfsc	status,0,c
  3089  000F82  2A0A               	incf	___awmod@dividend+1,f,c
  3090  000F84                     i2l1296:
  3091  000F84  C009  F009         	movff	___awmod@dividend,?___awmod
  3092  000F88  C00A  F00A         	movff	___awmod@dividend+1,?___awmod+1
  3093  000F8C  0012               	return	
  3094  000F8E                     __end_of___awmod:
  3095                           	opt stack 0
  3096                           pclatu	equ	0xFFB
  3097                           pclath	equ	0xFFA
  3098                           tblptru	equ	0xFF8
  3099                           tblptrh	equ	0xFF7
  3100                           tblptrl	equ	0xFF6
  3101                           tablat	equ	0xFF5
  3102                           prodh	equ	0xFF4
  3103                           prodl	equ	0xFF3
  3104                           intcon	equ	0xFF2
  3105                           postinc0	equ	0xFEE
  3106                           fsr0h	equ	0xFEA
  3107                           fsr0l	equ	0xFE9
  3108                           wreg	equ	0xFE8
  3109                           postinc1	equ	0xFE6
  3110                           postdec1	equ	0xFE5
  3111                           fsr1h	equ	0xFE2
  3112                           fsr1l	equ	0xFE1
  3113                           indf2	equ	0xFDF
  3114                           postinc2	equ	0xFDE
  3115                           postdec2	equ	0xFDD
  3116                           fsr2h	equ	0xFDA
  3117                           fsr2l	equ	0xFD9
  3118                           status	equ	0xFD8
  3119                           
  3120 ;; *************** function ___awdiv *****************
  3121 ;; Defined at:
  3122 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
  3123 ;; Parameters:    Size  Location     Type
  3124 ;;  dividend        2    0[COMRAM] int 
  3125 ;;  divisor         2    2[COMRAM] int 
  3126 ;; Auto vars:     Size  Location     Type
  3127 ;;  quotient        2    6[COMRAM] int 
  3128 ;;  sign            1    5[COMRAM] unsigned char 
  3129 ;;  counter         1    4[COMRAM] unsigned char 
  3130 ;; Return value:  Size  Location     Type
  3131 ;;                  2    0[COMRAM] int 
  3132 ;; Registers used:
  3133 ;;		wreg, status,2, status,0
  3134 ;; Tracked objects:
  3135 ;;		On entry : 0/0
  3136 ;;		On exit  : 0/0
  3137 ;;		Unchanged: 0/0
  3138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3139 ;;      Params:         4       0       0       0       0       0       0
  3140 ;;      Locals:         4       0       0       0       0       0       0
  3141 ;;      Temps:          0       0       0       0       0       0       0
  3142 ;;      Totals:         8       0       0       0       0       0       0
  3143 ;;Total ram usage:        8 bytes
  3144 ;; Hardware stack levels used:    1
  3145 ;; This function calls:
  3146 ;;		Nothing
  3147 ;; This function is called by:
  3148 ;;		_timer
  3149 ;; This function uses a non-reentrant model
  3150 ;;
  3151                           
  3152                           	psect	text9
  3153  000E18                     __ptext9:
  3154                           	opt stack 0
  3155  000E18                     ___awdiv:
  3156                           	opt stack 28
  3157                           
  3158                           ;incstack = 0
  3159  000E18  0E00               	movlw	0
  3160  000E1A  6E06               	movwf	___awdiv@sign,c
  3161  000E1C  AE04               	btfss	___awdiv@divisor+1,7,c
  3162  000E1E  D006               	goto	i2l1228
  3163  000E20  6C03               	negf	___awdiv@divisor,c
  3164  000E22  1E04               	comf	___awdiv@divisor+1,f,c
  3165  000E24  B0D8               	btfsc	status,0,c
  3166  000E26  2A04               	incf	___awdiv@divisor+1,f,c
  3167  000E28  0E01               	movlw	1
  3168  000E2A  6E06               	movwf	___awdiv@sign,c
  3169  000E2C                     i2l1228:
  3170  000E2C  AE02               	btfss	___awdiv@dividend+1,7,c
  3171  000E2E  D006               	goto	i2l1234
  3172  000E30  6C01               	negf	___awdiv@dividend,c
  3173  000E32  1E02               	comf	___awdiv@dividend+1,f,c
  3174  000E34  B0D8               	btfsc	status,0,c
  3175  000E36  2A02               	incf	___awdiv@dividend+1,f,c
  3176  000E38  0E01               	movlw	1
  3177  000E3A  1A06               	xorwf	___awdiv@sign,f,c
  3178  000E3C                     i2l1234:
  3179  000E3C  0E00               	movlw	0
  3180  000E3E  6E08               	movwf	___awdiv@quotient+1,c
  3181  000E40  0E00               	movlw	0
  3182  000E42  6E07               	movwf	___awdiv@quotient,c
  3183  000E44  5003               	movf	___awdiv@divisor,w,c
  3184  000E46  1004               	iorwf	___awdiv@divisor+1,w,c
  3185  000E48  B4D8               	btfsc	status,2,c
  3186  000E4A  D01C               	goto	i2l1256
  3187  000E4C  0E01               	movlw	1
  3188  000E4E  6E05               	movwf	___awdiv@counter,c
  3189  000E50  D004               	goto	i2l1242
  3190  000E52                     i2l1240:
  3191  000E52  90D8               	bcf	status,0,c
  3192  000E54  3603               	rlcf	___awdiv@divisor,f,c
  3193  000E56  3604               	rlcf	___awdiv@divisor+1,f,c
  3194  000E58  2A05               	incf	___awdiv@counter,f,c
  3195  000E5A                     i2l1242:
  3196  000E5A  AE04               	btfss	___awdiv@divisor+1,7,c
  3197  000E5C  D7FA               	goto	i2l1240
  3198  000E5E                     i2l1244:
  3199  000E5E  90D8               	bcf	status,0,c
  3200  000E60  3607               	rlcf	___awdiv@quotient,f,c
  3201  000E62  3608               	rlcf	___awdiv@quotient+1,f,c
  3202  000E64  5003               	movf	___awdiv@divisor,w,c
  3203  000E66  5C01               	subwf	___awdiv@dividend,w,c
  3204  000E68  5004               	movf	___awdiv@divisor+1,w,c
  3205  000E6A  5802               	subwfb	___awdiv@dividend+1,w,c
  3206  000E6C  A0D8               	btfss	status,0,c
  3207  000E6E  D005               	goto	i2l1252
  3208  000E70  5003               	movf	___awdiv@divisor,w,c
  3209  000E72  5E01               	subwf	___awdiv@dividend,f,c
  3210  000E74  5004               	movf	___awdiv@divisor+1,w,c
  3211  000E76  5A02               	subwfb	___awdiv@dividend+1,f,c
  3212  000E78  8007               	bsf	___awdiv@quotient,0,c
  3213  000E7A                     i2l1252:
  3214  000E7A  90D8               	bcf	status,0,c
  3215  000E7C  3204               	rrcf	___awdiv@divisor+1,f,c
  3216  000E7E  3203               	rrcf	___awdiv@divisor,f,c
  3217  000E80  2E05               	decfsz	___awdiv@counter,f,c
  3218  000E82  D7ED               	goto	i2l1244
  3219  000E84                     i2l1256:
  3220  000E84  5006               	movf	___awdiv@sign,w,c
  3221  000E86  B4D8               	btfsc	status,2,c
  3222  000E88  D004               	goto	i2l1260
  3223  000E8A  6C07               	negf	___awdiv@quotient,c
  3224  000E8C  1E08               	comf	___awdiv@quotient+1,f,c
  3225  000E8E  B0D8               	btfsc	status,0,c
  3226  000E90  2A08               	incf	___awdiv@quotient+1,f,c
  3227  000E92                     i2l1260:
  3228  000E92  C007  F001         	movff	___awdiv@quotient,?___awdiv
  3229  000E96  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  3230  000E9A  0012               	return	
  3231  000E9C                     __end_of___awdiv:
  3232                           	opt stack 0
  3233                           pclatu	equ	0xFFB
  3234                           pclath	equ	0xFFA
  3235                           tblptru	equ	0xFF8
  3236                           tblptrh	equ	0xFF7
  3237                           tblptrl	equ	0xFF6
  3238                           tablat	equ	0xFF5
  3239                           prodh	equ	0xFF4
  3240                           prodl	equ	0xFF3
  3241                           intcon	equ	0xFF2
  3242                           postinc0	equ	0xFEE
  3243                           fsr0h	equ	0xFEA
  3244                           fsr0l	equ	0xFE9
  3245                           wreg	equ	0xFE8
  3246                           postinc1	equ	0xFE6
  3247                           postdec1	equ	0xFE5
  3248                           fsr1h	equ	0xFE2
  3249                           fsr1l	equ	0xFE1
  3250                           indf2	equ	0xFDF
  3251                           postinc2	equ	0xFDE
  3252                           postdec2	equ	0xFDD
  3253                           fsr2h	equ	0xFDA
  3254                           fsr2l	equ	0xFD9
  3255                           status	equ	0xFD8
  3256                           pclatu	equ	0xFFB
  3257                           pclath	equ	0xFFA
  3258                           tblptru	equ	0xFF8
  3259                           tblptrh	equ	0xFF7
  3260                           tblptrl	equ	0xFF6
  3261                           tablat	equ	0xFF5
  3262                           prodh	equ	0xFF4
  3263                           prodl	equ	0xFF3
  3264                           intcon	equ	0xFF2
  3265                           postinc0	equ	0xFEE
  3266                           fsr0h	equ	0xFEA
  3267                           fsr0l	equ	0xFE9
  3268                           wreg	equ	0xFE8
  3269                           postinc1	equ	0xFE6
  3270                           postdec1	equ	0xFE5
  3271                           fsr1h	equ	0xFE2
  3272                           fsr1l	equ	0xFE1
  3273                           indf2	equ	0xFDF
  3274                           postinc2	equ	0xFDE
  3275                           postdec2	equ	0xFDD
  3276                           fsr2h	equ	0xFDA
  3277                           fsr2l	equ	0xFD9
  3278                           status	equ	0xFD8
  3279                           
  3280                           	psect	rparam
  3281  0000                     pclatu	equ	0xFFB
  3282                           pclath	equ	0xFFA
  3283                           tblptru	equ	0xFF8
  3284                           tblptrh	equ	0xFF7
  3285                           tblptrl	equ	0xFF6
  3286                           tablat	equ	0xFF5
  3287                           prodh	equ	0xFF4
  3288                           prodl	equ	0xFF3
  3289                           intcon	equ	0xFF2
  3290                           postinc0	equ	0xFEE
  3291                           fsr0h	equ	0xFEA
  3292                           fsr0l	equ	0xFE9
  3293                           wreg	equ	0xFE8
  3294                           postinc1	equ	0xFE6
  3295                           postdec1	equ	0xFE5
  3296                           fsr1h	equ	0xFE2
  3297                           fsr1l	equ	0xFE1
  3298                           indf2	equ	0xFDF
  3299                           postinc2	equ	0xFDE
  3300                           postdec2	equ	0xFDD
  3301                           fsr2h	equ	0xFDA
  3302                           fsr2l	equ	0xFD9
  3303                           status	equ	0xFD8
  3304                           
  3305                           	psect	temp
  3306  000045                     btemp:
  3307                           	opt stack 0
  3308  000045                     	ds	1
  3309  0000                     int$flags	set	btemp
  3310                           pclatu	equ	0xFFB
  3311                           pclath	equ	0xFFA
  3312                           tblptru	equ	0xFF8
  3313                           tblptrh	equ	0xFF7
  3314                           tblptrl	equ	0xFF6
  3315                           tablat	equ	0xFF5
  3316                           prodh	equ	0xFF4
  3317                           prodl	equ	0xFF3
  3318                           intcon	equ	0xFF2
  3319                           postinc0	equ	0xFEE
  3320                           fsr0h	equ	0xFEA
  3321                           fsr0l	equ	0xFE9
  3322                           wreg	equ	0xFE8
  3323                           postinc1	equ	0xFE6
  3324                           postdec1	equ	0xFE5
  3325                           fsr1h	equ	0xFE2
  3326                           fsr1l	equ	0xFE1
  3327                           indf2	equ	0xFDF
  3328                           postinc2	equ	0xFDE
  3329                           postdec2	equ	0xFDD
  3330                           fsr2h	equ	0xFDA
  3331                           fsr2l	equ	0xFD9
  3332                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    10
    Data        815
    BSS         284
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     47      68
    BANK0           160     14      18
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _timer in COMRAM

    _timer->___lldiv
    _timer->i2_light
    i2_light->___awmod
    ___lldiv->___wmul
    ___awmod->___awdiv

Critical Paths under _main in BANK0

    _main->_light

Critical Paths under _timer in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _timer in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _timer in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _timer in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _timer in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _timer in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 9     9      0     677
                                              5 BANK0      9     9      0
                              _light
 ---------------------------------------------------------------------------------
 (1) _light                                                5     2      3     630
                                              0 BANK0      5     2      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _timer                                               28    28      0    5258
                                             19 COMRAM    28    28      0
                            ___awdiv
                            ___awmod
                            ___lldiv
                            ___lwmod
                             ___wmul
                          _get_color
                            i2_light
 ---------------------------------------------------------------------------------
 (3) i2_light                                              5     2      3     406
                                             14 COMRAM     5     2      3
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwmod (ARG)
                             ___wmul (ARG)
                          _get_color (ARG)
 ---------------------------------------------------------------------------------
 (3) _get_color                                            4     0      4     524
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4    1695
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     287
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     418
                                              6 COMRAM    13     5      8
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4     808
                                              8 COMRAM     6     2      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     940
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _light

 _timer (ROOT)
   ___awdiv
   ___awmod
     ___awdiv (ARG)
   ___lldiv
     ___wmul (ARG)
   ___lwmod
   ___wmul
   _get_color
   i2_light
     ___awdiv (ARG)
     ___awmod (ARG)
       ___awdiv (ARG)
     ___lwmod (ARG)
     ___wmul (ARG)
     _get_color (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0     432      16       70.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      E      12       4       11.3%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2F      44       1       72.3%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      56       9        0.0%
DATA                 0      0     488      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Sat Oct 10 04:44:10 2015

                         _N 0601                           _S 0609                ___awdiv@sign 0006  
                        _co 0038         ___wmul@multiplicand 0003                         _GIE 007F97  
                       _min 003B                         _sec 003C                ___awmod@sign 000E  
                       wreg 000FE8                __CFG_LVP$OFF 000000                        l1372 0A38  
                      l1382 0A60                        l1386 0A6C                        _LATA 000F89  
                      _LATC 000F8B                        _PEIE 007F96                        _main 0930  
                      fsr0h 000FEA                        fsr1h 000FE2                        fsr0l 000FE9  
                      fsr2h 000FDA                        fsr1l 000FE1                        indf2 000FDF  
                      fsr2l 000FD9                        btemp 0045               __CFG_BORV$285 000000  
                      pclat 000FFA                        prodh 000FF4                        prodl 000FF3  
                      start 056A             __end_ofi2_light 0D82                ___param_bank 000010  
                     ?_main 0001             __end_of___awdiv 0E9C             __end_of___awmod 0F8E  
           __end_of___lldiv 0F1E             ___awdiv@divisor 0003                       _T1CON 000FCD  
                     _T3CON 000FB1             __end_of___lwmod 0FD0                       i2l130 02EE  
                     i2l152 052E                       i2l502 0F0C                       i2l565 0FC6  
           ___awdiv@counter 0005                       _TMR1H 000FCF                       _TMR3H 000FB3  
                     _TMR1L 000FCE                       _TMR3L 000FB2                       _PORTA 000F80  
                     _PORTB 000F81                       _PORTC 000F82                       _TRISA 000F92  
                     _TRISB 000F93                       _TRISC 000F94                       _count 0036  
                     _light 0BB4          __CFG_MCLRE$INTMCLR 000000                       _timer 0008  
                     tablat 000FF5                       status 000FD8             __initialization 0D82  
              __end_of_main 0A74                      ??_main 0065               __activetblptr 000001  
                    ?_light 0060            ___awdiv@dividend 0001                      ?_timer 0001  
                    _ANSELA 000F38                      _ANSELB 000F39                      _ANSELC 000F3A  
                    i2l1202 0B90                      i2l1210 0BB0                      i2l1132 0A98  
                    i2l1310 0ECE                      i2l1142 0ABC                      i2l1240 0E52  
                    i2l1152 0AE0                      i2l1136 0AB8                      i2l1242 0E5A  
                    i2l1234 0E3C                      i2l1306 0EBE                      i2l1330 0FA8  
                    i2l1162 0B04                      i2l1260 0E92                      i2l1252 0E7A  
                    i2l1244 0E5E                      i2l1228 0E2C                      i2l1308 0ECA  
                    i2l1172 0B28                      i2l1156 0B00                      i2l1420 0224  
                    i2l1404 016E                      i2l1318 0EFE                      i2l1334 0FBC  
                    i2l1326 0F9C                      i2l1182 0B4C                      i2l1430 024C  
                    i2l1414 0190                      i2l1256 0E84                      i2l1280 0F4C  
                    i2l1272 0F32                      i2l1328 0FA4                      i2l1192 0B70  
                    i2l1424 0234                      i2l1282 0F54                      i2l1426 023C  
                    i2l1284 0F58                      i2l1292 0F76                      i2l1276 0F3E  
                    i2l1452 042E                      i2l1436 02E8                      i2l1296 0F84  
                    i2l1288 0F6C                      i2l1456 04B6                      i2l1448 03A6  
                    i2l1458 0522              __CFG_WDTEN$OFF 000000                   ??i2_light 0012  
                    _OSCCON 000FD3                      _TMR1IE 007CE8                      _TMR1IF 007CF0  
                    _TMR3IE 007D01                      _TMR3IF 007D09              __CFG_PWRTEN$ON 000000  
                    ___wmul 0FD0                   ??___awdiv 0005                   ??___awmod 000D  
                 ??___lldiv 000F                   ??___lwmod 0005                      clear_0 0D8A  
                    clear_1 0D9C            ___awdiv@quotient 0007             ___awmod@divisor 000B  
                    _screen 0396             ___awmod@counter 000D                __pdataBIGRAM 0072  
                    light@c 0064                      light@h 0060                      light@l 0061  
              __pdataCOMRAM 003E                __mediumconst 0000                      tblptrh 000FF7  
                    tblptrl 000FF6                      tblptru 000FF8                      timer@i 002C  
                    timer@j 002E                      timer@v 003D             __CFG_HFOFST$OFF 000000  
                __accesstop 0060     __end_of__initialization 0E06               ___rparam_used 000001  
            __pcstackCOMRAM 0001                __pidataBANK0 0FFD               __end_of_light 0CBA  
        _time_control_count 0605               __end_of_timer 056A          __size_of_get_color 0140  
                   ??_light 0063                     ??_timer 0014             __CFG_PLLCFG$OFF 000000  
                   ?___wmul 0001                     i2u60_40 0ACC           __CFG_PRICLKEN$OFF 000000  
                   i2u70_40 0B80                     i2u62_40 0AF0                     i2u72_40 0BA0  
                   i2u64_40 0B14                     i2u56_40 0A84                     i2u66_40 0B38  
                   i2u58_40 0AA8                     i2u68_40 0B5C                     i2u99_40 018A  
                   i2_light 0CBA                     __Hparam 0000                     __Lparam 0000  
         __end_of_get_color 0BB4                     ___awdiv 0E18                     ___awmod 0F1E  
                   ___lldiv 0E9C             __size_of___wmul 0026                     ___lwmod 0F8E  
              __psmallconst 0600                     _Youkoso 0180                     __pcinit 0D82  
                   __ramtop 0600                     __ptext0 0930                     __ptext1 0BB4  
                   __ptext3 0CBA                     __ptext4 0A74                     __ptext5 0FD0  
                   __ptext6 0F8E                     __ptext7 0E9C                     __ptext8 0F1E  
                   __ptext9 0E18            ___awmod@dividend 0009                     _numlist 003E  
      end_of_initialization 0E06            __CFG_BOREN$NOSLP 000000             ___lldiv@divisor 000B  
           ___lldiv@counter 0013                     postdec1 000FE5                     postdec2 000FDD  
                   postinc0 000FEE                     postinc1 000FE6                     postinc2 000FDE  
                _time_count 0043                   _PORTBbits 000F81                  get_color@x 0001  
             __pidataBIGRAM 060C              __end_of___wmul 0FF6               __pidataCOMRAM 0FF6  
            _light_interval 006E         start_initialization 0D82                    ??___wmul 0005  
               __pdataBANK0 006E                 __pbssBIGRAM 0396                 __pbssCOMRAM 0030  
             __pcstackBANK0 0060                   __end_of_N 0605                   __end_of_S 060B  
                  ?i2_light 000F                   __pintcode 0008                    ?___awdiv 0001  
                  ?___awmod 0009                    ?___lldiv 0007                    ?___lwmod 0001  
                 _get_color 0A74                 __smallconst 0600                 _eight_count 0039  
            __size_of_light 0106              __size_of_timer 0562                _letter_start 003A  
            ___wmul@product 0005                    _LATBbits 000F8A                  ?_get_color 0001  
               _color_count 0034           ___wmul@multiplier 0001                    i2light@c 0013  
                  i2light@h 000F                    i2light@l 0010                   copy_data0 0DB6  
                 copy_data1 0DDA                   copy_data2 0DFA            __size_ofi2_light 00C8  
                  __Hrparam 0000                    _ThankYou 0072                    __Lrparam 0000  
              __Lsmallconst 0600            __size_of___awdiv 0084            __size_of___awmod 0070  
          __size_of___lldiv 0082            __size_of___lwmod 0042                 _light_point 0030  
             __size_of_main 0144                    int$flags 0045                 ??_get_color 0005  
                  main@prev 006D                    intlevel2 0000            ___lwmod@dividend 0001  
          ___lldiv@dividend 0007                 _number_font 028E            ___lldiv@quotient 000F  
           ___lwmod@divisor 0003             ___lwmod@counter 0005  __end_of_time_control_count 0609  
         __CFG_FOSC$INTIO67 000000  
